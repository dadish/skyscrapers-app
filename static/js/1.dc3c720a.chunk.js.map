{"version":3,"sources":["webpack:///static/js/1.dc3c720a.chunk.js","webpack:///./src/containers/SkyscrapersList/constants.js","webpack:///./src/containers/SkyscrapersList/selectors.js","webpack:///./src/containers/HomePage/index.js","webpack:///./src/containers/SkyscrapersList/actions.js","webpack:///./src/containers/SkyscrapersList/epic.js","webpack:///./src/containers/SkyscrapersList/reducer.js","webpack:///./src/containers/SkyscrapersList/Item/index.js","webpack:///./src/containers/SkyscrapersList/List/index.js","webpack:///./src/containers/SkyscrapersList/List/reducer.js","webpack:///./src/containers/SkyscrapersList/List/selectors.js","webpack:///./src/containers/SkyscrapersList/Search/epic.js","webpack:///./src/containers/SkyscrapersList/Search/index.js","webpack:///./src/containers/SkyscrapersList/index.js","webpack:///./src/containers/SkyscrapersList/schema.js","webpack:///./src/utils/createActionCreator.js","webpack:///./~/rxjs/BehaviorSubject.js","webpack:///./~/rxjs/add/operator/catch.js","webpack:///./~/rxjs/add/operator/debounceTime.js","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/add/operator/merge.js","webpack:///./~/rxjs/add/operator/switchMap.js","webpack:///./~/rxjs/observable/concat.js","webpack:///./~/rxjs/observable/dom/AjaxObservable.js","webpack:///./~/rxjs/observable/dom/ajax.js","webpack:///./~/rxjs/operator/catch.js","webpack:///./~/rxjs/operator/concat.js","webpack:///./~/rxjs/operator/debounceTime.js","webpack:///./~/rxjs/scheduler/async.js"],"names":["webpackJsonp","104","module","exports","Object","defineProperty","value","CHANGE_SEARCH_TXT","AJAX_SEARCH_START","AJAX_SEARCH_END","AJAX_SEARCH_FAIL","INITIAL_LOAD","159","__webpack_require__","selectLoading","selectSkyscrapers","undefined","_reselect","state","get","createSelector","skyscrapers","268","_interopRequireDefault","obj","__esModule","default","_react","_react2","_SkyscrapersList","_SkyscrapersList2","_semanticUiReact","Column","Grid","Home","createElement","columns","centered","270","initialLoad","ajaxSearchFail","ajaxSearchEnd","ajaxSearchStart","changeSearchTxt","_createActionCreator","_createActionCreator2","_constants","271","_reduxObservable","_epic","_epic2","epic","combineEpics","272","initialState","_immutable","_reducer","_reducer2","fromJS","list","loading","reducer","arguments","length","action","type","set","516","ItemComponent","CardHeader","Card","Header","CardContent","Content","_ref","skyscraper","Image","fluid","src","alt","extra","Statistic","label","size","517","ListComponent","_reactRedux","_selectors","_selectors2","_Item","_Item2","Group","itemsPerRow","style","minHeight","Loader","active","map","item","key","mapStateToProps","createStructuredSelector","selectList","connect","518","List","payload","data","Map","519","520","_BehaviorSubject","_concat","_of","_ajax","_actions","_schema","action$","merge","BehaviorSubject","ofType","debounceTime","switchMap","concat","of","ajax","url","body","query","getQuery","variables","JSON","stringify","selector","method","xhr","response","catch","e","521","SearchComponent","handleChange","Input","icon","placeholder","onChange","mapDispatchToProps","dispatch","ev","target","522","_List","_List2","_Search","_Search2","SkyscrapersListComponent","Divider","hidden","523","529","createActionCreator","meta","908","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","create","Subject_1","ObjectUnsubscribedError_1","_super","_value","call","getValue","enumerable","configurable","_subscribe","subscriber","subscription","closed","next","hasError","thrownError","ObjectUnsubscribedError","Subject","912","Observable_1","catch_1","Observable","_catch","913","debounceTime_1","915","map_1","917","merge_1","919","switchMap_1","924","concat_1","concatStatic","925","getCORSRequest","root_1","root","XMLHttpRequest","XDomainRequest","Error","getXMLHttpRequest","progId","progIds","i","ActiveXObject","ajaxGet","headers","AjaxObservable","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","responseType","lift","MapOperator","x","index","tryCatch_1","errorObject_1","Subscriber_1","urlOrRequest","request","async","createXHR","crossDomain","withCredentials","timeout","prop","AjaxSubscriber","post","delete","put","patch","getJSON","destination","done","FormData","serializeBody","send","_a","AjaxResponse","_b","user","password","tryCatch","errorObject","error","setupEvents","result","open","setHeaders","contentType","splitIndex","indexOf","substring","keys","encodeURI","join","setRequestHeader","xhrTimeout","progressSubscriber","AjaxTimeoutError","xhrReadyStateChange","readyState","status_1","status","responseText","complete","AjaxError","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","onerror","onreadystatechange","unsubscribe","abort","Subscriber","originalEvent","parse","responseXML","message","926","AjaxObservable_1","929","operator","CatchOperator","caught","OuterSubscriber_1","subscribeToResult_1","source","subscribe","CatchSubscriber","err","isStopped","err2","_unsubscribeAndRecycle","add","subscribeToResult","OuterSubscriber","930","observables","_i","apply","scheduler","args","isScheduler_1","isScheduler","pop","ArrayObservable_1","ArrayObservable","mergeAll_1","MergeAllOperator","931","dueTime","async_1","DebounceTimeOperator","dispatchNext","debouncedNext","DebounceTimeSubscriber","debouncedSubscription","lastValue","hasValue","_next","clearDebounce","schedule","_complete","remove","938","AsyncAction_1","AsyncScheduler_1","AsyncScheduler","AsyncAction"],"mappings":"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","file":"static/js/1.dc3c720a.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 104:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * SkyscrapersList constants\n\t */\n\t\n\t/**\n\t * When the user updates the search text\n\t */\n\tvar CHANGE_SEARCH_TXT = exports.CHANGE_SEARCH_TXT = 'skyscrapers/SkyscrapersList/CHANGE_SEARCH_TXT';\n\t\n\t/**\n\t * The AJAX search request for matching skyscrapers starts\n\t */\n\tvar AJAX_SEARCH_START = exports.AJAX_SEARCH_START = 'skyscrapers/SkyscrapersList/AJAX_SEARCH_START';\n\t\n\t/**\n\t * The AJAX search request successfully ends\n\t */\n\tvar AJAX_SEARCH_END = exports.AJAX_SEARCH_END = 'skyscrapers/SkyscrapersList/AJAX_SEARCH_END';\n\t\n\t/**\n\t * The AJAX search request fails\n\t */\n\tvar AJAX_SEARCH_FAIL = exports.AJAX_SEARCH_FAIL = 'skyscrapers/SkyscrapersList/AJAX_SEARCH_FAIL';\n\t\n\t/**\n\t * The user visited the page the first time \n\t */\n\tvar INITIAL_LOAD = exports.INITIAL_LOAD = 'skyscrapers/SkyscrapersList/INITIAL_LOAD';\n\n/***/ },\n\n/***/ 159:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.selectLoading = exports.selectSkyscrapers = undefined;\n\t\n\tvar _reselect = __webpack_require__(83);\n\t\n\tvar selectSkyscrapers = exports.selectSkyscrapers = function selectSkyscrapers() {\n\t  return function (state) {\n\t    return state.get('skyscrapers');\n\t  };\n\t};\n\t\n\tvar selectLoading = exports.selectLoading = function selectLoading() {\n\t  return (0, _reselect.createSelector)(selectSkyscrapers(), function (skyscrapers) {\n\t    return skyscrapers.get('loading');\n\t  });\n\t};\n\n/***/ },\n\n/***/ 268:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _SkyscrapersList = __webpack_require__(522);\n\t\n\tvar _SkyscrapersList2 = _interopRequireDefault(_SkyscrapersList);\n\t\n\tvar _semanticUiReact = __webpack_require__(85);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Column = _semanticUiReact.Grid.Column;\n\t\n\t\n\tvar Home = function Home() {\n\t  return _react2.default.createElement(\n\t    _semanticUiReact.Grid,\n\t    { columns: 2, centered: true },\n\t    _react2.default.createElement(\n\t      Column,\n\t      null,\n\t      _react2.default.createElement(_SkyscrapersList2.default, null)\n\t    )\n\t  );\n\t};\n\t\n\texports.default = Home;\n\n/***/ },\n\n/***/ 270:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.initialLoad = exports.ajaxSearchFail = exports.ajaxSearchEnd = exports.ajaxSearchStart = exports.changeSearchTxt = undefined;\n\t\n\tvar _createActionCreator = __webpack_require__(529);\n\t\n\tvar _createActionCreator2 = _interopRequireDefault(_createActionCreator);\n\t\n\tvar _constants = __webpack_require__(104);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * When the user updates the search text\n\t */\n\tvar changeSearchTxt = exports.changeSearchTxt = (0, _createActionCreator2.default)(_constants.CHANGE_SEARCH_TXT);\n\t\n\t/**\n\t * The AJAX search request for matching skyscrapers starts\n\t */\n\tvar ajaxSearchStart = exports.ajaxSearchStart = (0, _createActionCreator2.default)(_constants.AJAX_SEARCH_START);\n\t\n\t/**\n\t * The AJAX search request successfully ends\n\t */\n\tvar ajaxSearchEnd = exports.ajaxSearchEnd = (0, _createActionCreator2.default)(_constants.AJAX_SEARCH_END);\n\t\n\t/**\n\t * The AJAX search request fails\n\t */\n\tvar ajaxSearchFail = exports.ajaxSearchFail = (0, _createActionCreator2.default)(_constants.AJAX_SEARCH_FAIL);\n\t\n\t/**\n\t * The user visited the page the first time \n\t */\n\tvar initialLoad = exports.initialLoad = (0, _createActionCreator2.default)(_constants.INITIAL_LOAD);\n\n/***/ },\n\n/***/ 271:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _reduxObservable = __webpack_require__(401);\n\t\n\tvar _epic = __webpack_require__(520);\n\t\n\tvar _epic2 = _interopRequireDefault(_epic);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar epic = (0, _reduxObservable.combineEpics)(_epic2.default);\n\t\n\texports.default = epic;\n\n/***/ },\n\n/***/ 272:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.initialState = undefined;\n\t\n\tvar _immutable = __webpack_require__(59);\n\t\n\tvar _reducer = __webpack_require__(518);\n\t\n\tvar _reducer2 = _interopRequireDefault(_reducer);\n\t\n\tvar _constants = __webpack_require__(104);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar initialState = exports.initialState = (0, _immutable.fromJS)({\n\t  list: _reducer.initialState,\n\t  loading: false\n\t});\n\t\n\tvar reducer = function reducer() {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t  var action = arguments[1];\n\t  var type = action.type;\n\t\n\t  switch (type) {\n\t    case _constants.AJAX_SEARCH_START:\n\t      return state.set('loading', true);\n\t    case _constants.AJAX_SEARCH_END:\n\t      state = state.set('loading', false);\n\t      return state.set('list', (0, _reducer2.default)(state.get('list'), action));\n\t    case _constants.AJAX_SEARCH_FAIL:\n\t      return state.set('loading', false);\n\t    default:\n\t      return state;\n\t  }\n\t};\n\t\n\texports.default = reducer;\n\n/***/ },\n\n/***/ 516:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ItemComponent = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _semanticUiReact = __webpack_require__(85);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CardHeader = _semanticUiReact.Card.Header,\n\t    CardContent = _semanticUiReact.Card.Content;\n\tvar ItemComponent = exports.ItemComponent = function ItemComponent(_ref) {\n\t  var skyscraper = _ref.skyscraper;\n\t  return _react2.default.createElement(\n\t    _semanticUiReact.Card,\n\t    null,\n\t    _react2.default.createElement(_semanticUiReact.Image, { fluid: true, src: 'https://placehold.it/200/', alt: skyscraper.get('title') }),\n\t    _react2.default.createElement(\n\t      CardContent,\n\t      null,\n\t      _react2.default.createElement(\n\t        CardHeader,\n\t        null,\n\t        skyscraper.get('title')\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      CardContent,\n\t      { extra: true },\n\t      _react2.default.createElement(_semanticUiReact.Statistic, { value: skyscraper.get('floors'), label: 'floors', size: 'mini' }),\n\t      _react2.default.createElement(_semanticUiReact.Statistic, { value: skyscraper.get('height'), label: 'height', size: 'mini' })\n\t    )\n\t  );\n\t};\n\t\n\texports.default = ItemComponent;\n\n/***/ },\n\n/***/ 517:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ListComponent = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(145);\n\t\n\tvar _reselect = __webpack_require__(83);\n\t\n\tvar _semanticUiReact = __webpack_require__(85);\n\t\n\tvar _selectors = __webpack_require__(519);\n\t\n\tvar _selectors2 = __webpack_require__(159);\n\t\n\tvar _Item = __webpack_require__(516);\n\t\n\tvar _Item2 = _interopRequireDefault(_Item);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ListComponent = exports.ListComponent = function ListComponent(_ref) {\n\t  var list = _ref.list,\n\t      loading = _ref.loading;\n\t\n\t  return _react2.default.createElement(\n\t    _semanticUiReact.Card.Group,\n\t    { itemsPerRow: 2, style: { minHeight: '200px' } },\n\t    _react2.default.createElement(\n\t      _semanticUiReact.Loader,\n\t      { active: loading },\n\t      'Loading...'\n\t    ),\n\t    !loading && list.map(function (item) {\n\t      return _react2.default.createElement(_Item2.default, { key: item.get('id'), skyscraper: item });\n\t    })\n\t  );\n\t};\n\t\n\tvar mapStateToProps = (0, _reselect.createStructuredSelector)({\n\t  list: (0, _selectors.selectList)(),\n\t  loading: (0, _selectors2.selectLoading)()\n\t});\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps)(ListComponent);\n\n/***/ },\n\n/***/ 518:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.initialState = undefined;\n\t\n\tvar _immutable = __webpack_require__(59);\n\t\n\tvar _constants = __webpack_require__(104);\n\t\n\tvar initialState = exports.initialState = new _immutable.List();\n\t\n\tvar reducer = function reducer() {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t  var action = arguments[1];\n\t  var type = action.type,\n\t      payload = action.payload;\n\t\n\t  switch (type) {\n\t    case _constants.AJAX_SEARCH_END:\n\t      return new _immutable.List(payload.data.skyscraper.list.map(function (item) {\n\t        return new _immutable.Map(item);\n\t      }));\n\t    default:\n\t      return state;\n\t  }\n\t};\n\t\n\texports.default = reducer;\n\n/***/ },\n\n/***/ 519:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.selectList = undefined;\n\t\n\tvar _reselect = __webpack_require__(83);\n\t\n\tvar _selectors = __webpack_require__(159);\n\t\n\tvar selectList = exports.selectList = function selectList() {\n\t  return (0, _reselect.createSelector)((0, _selectors.selectSkyscrapers)(), function (skyscrapers) {\n\t    return skyscrapers.get('list');\n\t  });\n\t};\n\n/***/ },\n\n/***/ 520:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(913);\n\t\n\t__webpack_require__(409);\n\t\n\t__webpack_require__(915);\n\t\n\t__webpack_require__(912);\n\t\n\t__webpack_require__(917);\n\t\n\t__webpack_require__(919);\n\t\n\tvar _BehaviorSubject = __webpack_require__(908);\n\t\n\tvar _concat = __webpack_require__(924);\n\t\n\tvar _of = __webpack_require__(412);\n\t\n\tvar _ajax = __webpack_require__(926);\n\t\n\tvar _constants = __webpack_require__(104);\n\t\n\tvar _actions = __webpack_require__(270);\n\t\n\tvar _schema = __webpack_require__(523);\n\t\n\t/**\n\t * SkyscrapersList epic\n\t * Coordinates the redux side effects\n\t */\n\tvar epic = function epic(action$) {\n\t  return action$\n\t\n\t  // Emit changeSearchTxt() action once. So skyscrapers are preloaded when first \n\t  // visited\n\t  .merge(new _BehaviorSubject.BehaviorSubject((0, _actions.changeSearchTxt)(void 0, 'preload')))\n\t\n\t  // react only to CHANGE_SEARCH_TXT actions\n\t  .ofType(_constants.CHANGE_SEARCH_TXT)\n\t\n\t  // debounce so that we do not fire AJAX request on every keyup\n\t  .debounceTime(300)\n\t\n\t  // convert action stream to the ajax start and end/fail actions\n\t  // we use switchMap that helps us convert the actions and at the same\n\t  // time it automatically unsubscribes the previous observables when new\n\t  // one comes in with values that allows us handle AJAX cancellation\n\t  .switchMap(function (action) {\n\t    return (0, _concat.concat)(\n\t\n\t    // For each ajax request we fire AJAC_SEARCH_START action\n\t    (0, _of.of)((0, _actions.ajaxSearchStart)()),\n\t\n\t    // make an ajax request\n\t    (0, _ajax.ajax)({\n\t      url: (\"https://skyscrapers.nurgulyashyrov.com/graphql/\"),\n\t      body: {\n\t        query: (0, _schema.getQuery)(),\n\t        variables: JSON.stringify({ selector: action.payload ? 'title|body*=' + action.payload : \"\" })\n\t      },\n\t      method: 'POST'\n\t    })\n\t\n\t    // fire AJAX_SEARCH_END action when successfully requested\n\t    .map(function (xhr) {\n\t      return (0, _actions.ajaxSearchEnd)(xhr.response);\n\t    })\n\t\n\t    // fire AJAC_SEARCH_FAIL action if request is note successful\n\t    .catch(function (e) {\n\t      return (0, _of.of)((0, _actions.ajaxSearchFail)(e));\n\t    }));\n\t  });\n\t};\n\t\n\texports.default = epic;\n\n/***/ },\n\n/***/ 521:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SearchComponent = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(145);\n\t\n\tvar _reselect = __webpack_require__(83);\n\t\n\tvar _semanticUiReact = __webpack_require__(85);\n\t\n\tvar _actions = __webpack_require__(270);\n\t\n\tvar _selectors = __webpack_require__(159);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SearchComponent = exports.SearchComponent = function SearchComponent(_ref) {\n\t  var handleChange = _ref.handleChange,\n\t      loading = _ref.loading;\n\t  return _react2.default.createElement(_semanticUiReact.Input, {\n\t    fluid: true,\n\t    icon: 'search',\n\t    placeholder: 'Search skyscrapers...',\n\t    onChange: handleChange,\n\t    loading: loading\n\t  });\n\t};\n\t\n\tvar mapStateToProps = (0, _reselect.createStructuredSelector)({\n\t  loading: (0, _selectors.selectLoading)()\n\t});\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    handleChange: function handleChange(ev) {\n\t      return dispatch((0, _actions.changeSearchTxt)(ev.target.value));\n\t    }\n\t  };\n\t};\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SearchComponent);\n\n/***/ },\n\n/***/ 522:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _List = __webpack_require__(517);\n\t\n\tvar _List2 = _interopRequireDefault(_List);\n\t\n\tvar _Search = __webpack_require__(521);\n\t\n\tvar _Search2 = _interopRequireDefault(_Search);\n\t\n\tvar _semanticUiReact = __webpack_require__(85);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar SkyscrapersListComponent = function SkyscrapersListComponent() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_Search2.default, null),\n\t    _react2.default.createElement(_semanticUiReact.Divider, { hidden: true }),\n\t    _react2.default.createElement(_List2.default, null)\n\t  );\n\t};\n\t\n\texports.default = SkyscrapersListComponent;\n\n/***/ },\n\n/***/ 523:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar query = \"query skyscrapers($selector: Selector){\\n  skyscraper(s: $selector){\\n    getTotal\\n    getLimit\\n    getStart\\n    list{\\n      id\\n      title\\n      height\\n      floors\\n      year\\n      parentID\\n      map{\\n        lat\\n        lng\\n      }\\n      architects{\\n       \\tlist{\\n          title\\n          id\\n        } \\n      }\\n    }\\n  }\\n}\";\n\t\n\tvar getQuery = exports.getQuery = function getQuery() {\n\t  return query;\n\t};\n\n/***/ },\n\n/***/ 529:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/**\n\t * Method that creates flux action creators\n\t * Fist call with the type arguments returns the action creator with defined type.\n\t * Second call accepts payload & meta\n\t * @argument {string} type       Flux action type constant.\n\t * @argument {mixed}  payload    The flux action payload.\n\t * @argument {object} meta       Flux action meta property.\n\t * @return   {function}          First call returns the actionCreator function\n\t * @return   {function}          Second call returns Flux action object with payload & meta properties\n\t */\n\tvar createActionCreator = function createActionCreator(type) {\n\t  return function (payload, meta) {\n\t    return {\n\t      type: type,\n\t      payload: payload,\n\t      meta: meta\n\t    };\n\t  };\n\t};\n\t\n\texports.default = createActionCreator;\n\n/***/ },\n\n/***/ 908:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subject_1 = __webpack_require__(233);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(238);\n\t/**\n\t * @class BehaviorSubject<T>\n\t */\n\tvar BehaviorSubject = (function (_super) {\n\t    __extends(BehaviorSubject, _super);\n\t    function BehaviorSubject(_value) {\n\t        _super.call(this);\n\t        this._value = _value;\n\t    }\n\t    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n\t        get: function () {\n\t            return this.getValue();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    BehaviorSubject.prototype._subscribe = function (subscriber) {\n\t        var subscription = _super.prototype._subscribe.call(this, subscriber);\n\t        if (subscription && !subscription.closed) {\n\t            subscriber.next(this._value);\n\t        }\n\t        return subscription;\n\t    };\n\t    BehaviorSubject.prototype.getValue = function () {\n\t        if (this.hasError) {\n\t            throw this.thrownError;\n\t        }\n\t        else if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else {\n\t            return this._value;\n\t        }\n\t    };\n\t    BehaviorSubject.prototype.next = function (value) {\n\t        _super.prototype.next.call(this, this._value = value);\n\t    };\n\t    return BehaviorSubject;\n\t}(Subject_1.Subject));\n\texports.BehaviorSubject = BehaviorSubject;\n\t//# sourceMappingURL=BehaviorSubject.js.map\n\n/***/ },\n\n/***/ 912:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(16);\n\tvar catch_1 = __webpack_require__(929);\n\tObservable_1.Observable.prototype.catch = catch_1._catch;\n\tObservable_1.Observable.prototype._catch = catch_1._catch;\n\t//# sourceMappingURL=catch.js.map\n\n/***/ },\n\n/***/ 913:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(16);\n\tvar debounceTime_1 = __webpack_require__(931);\n\tObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n\t//# sourceMappingURL=debounceTime.js.map\n\n/***/ },\n\n/***/ 915:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(16);\n\tvar map_1 = __webpack_require__(234);\n\tObservable_1.Observable.prototype.map = map_1.map;\n\t//# sourceMappingURL=map.js.map\n\n/***/ },\n\n/***/ 917:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(16);\n\tvar merge_1 = __webpack_require__(414);\n\tObservable_1.Observable.prototype.merge = merge_1.merge;\n\t//# sourceMappingURL=merge.js.map\n\n/***/ },\n\n/***/ 919:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(16);\n\tvar switchMap_1 = __webpack_require__(417);\n\tObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n\t//# sourceMappingURL=switchMap.js.map\n\n/***/ },\n\n/***/ 924:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar concat_1 = __webpack_require__(930);\n\texports.concat = concat_1.concatStatic;\n\t//# sourceMappingURL=concat.js.map\n\n/***/ },\n\n/***/ 925:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar root_1 = __webpack_require__(42);\n\tvar tryCatch_1 = __webpack_require__(425);\n\tvar errorObject_1 = __webpack_require__(239);\n\tvar Observable_1 = __webpack_require__(16);\n\tvar Subscriber_1 = __webpack_require__(31);\n\tvar map_1 = __webpack_require__(234);\n\tfunction getCORSRequest() {\n\t    if (root_1.root.XMLHttpRequest) {\n\t        return new root_1.root.XMLHttpRequest();\n\t    }\n\t    else if (!!root_1.root.XDomainRequest) {\n\t        return new root_1.root.XDomainRequest();\n\t    }\n\t    else {\n\t        throw new Error('CORS is not supported by your browser');\n\t    }\n\t}\n\tfunction getXMLHttpRequest() {\n\t    if (root_1.root.XMLHttpRequest) {\n\t        return new root_1.root.XMLHttpRequest();\n\t    }\n\t    else {\n\t        var progId = void 0;\n\t        try {\n\t            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\t            for (var i = 0; i < 3; i++) {\n\t                try {\n\t                    progId = progIds[i];\n\t                    if (new root_1.root.ActiveXObject(progId)) {\n\t                        break;\n\t                    }\n\t                }\n\t                catch (e) {\n\t                }\n\t            }\n\t            return new root_1.root.ActiveXObject(progId);\n\t        }\n\t        catch (e) {\n\t            throw new Error('XMLHttpRequest is not supported by your browser');\n\t        }\n\t    }\n\t}\n\tfunction ajaxGet(url, headers) {\n\t    if (headers === void 0) { headers = null; }\n\t    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n\t}\n\texports.ajaxGet = ajaxGet;\n\t;\n\tfunction ajaxPost(url, body, headers) {\n\t    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n\t}\n\texports.ajaxPost = ajaxPost;\n\t;\n\tfunction ajaxDelete(url, headers) {\n\t    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n\t}\n\texports.ajaxDelete = ajaxDelete;\n\t;\n\tfunction ajaxPut(url, body, headers) {\n\t    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n\t}\n\texports.ajaxPut = ajaxPut;\n\t;\n\tfunction ajaxPatch(url, body, headers) {\n\t    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n\t}\n\texports.ajaxPatch = ajaxPatch;\n\t;\n\tfunction ajaxGetJSON(url, headers) {\n\t    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n\t        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n\t}\n\texports.ajaxGetJSON = ajaxGetJSON;\n\t;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar AjaxObservable = (function (_super) {\n\t    __extends(AjaxObservable, _super);\n\t    function AjaxObservable(urlOrRequest) {\n\t        _super.call(this);\n\t        var request = {\n\t            async: true,\n\t            createXHR: function () {\n\t                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n\t            },\n\t            crossDomain: false,\n\t            withCredentials: false,\n\t            headers: {},\n\t            method: 'GET',\n\t            responseType: 'json',\n\t            timeout: 0\n\t        };\n\t        if (typeof urlOrRequest === 'string') {\n\t            request.url = urlOrRequest;\n\t        }\n\t        else {\n\t            for (var prop in urlOrRequest) {\n\t                if (urlOrRequest.hasOwnProperty(prop)) {\n\t                    request[prop] = urlOrRequest[prop];\n\t                }\n\t            }\n\t        }\n\t        this.request = request;\n\t    }\n\t    AjaxObservable.prototype._subscribe = function (subscriber) {\n\t        return new AjaxSubscriber(subscriber, this.request);\n\t    };\n\t    /**\n\t     * Creates an observable for an Ajax request with either a request object with\n\t     * url, headers, etc or a string for a URL.\n\t     *\n\t     * @example\n\t     * source = Rx.Observable.ajax('/products');\n\t     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n\t     *\n\t     * @param {string|Object} request Can be one of the following:\n\t     *   A string of the URL to make the Ajax call.\n\t     *   An object with the following properties\n\t     *   - url: URL of the request\n\t     *   - body: The body of the request\n\t     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n\t     *   - async: Whether the request is async\n\t     *   - headers: Optional headers\n\t     *   - crossDomain: true if a cross domain request, else false\n\t     *   - createXHR: a function to override if you need to use an alternate\n\t     *   XMLHttpRequest implementation.\n\t     *   - resultSelector: a function to use to alter the output value type of\n\t     *   the Observable. Gets {@link AjaxResponse} as an argument.\n\t     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n\t     * @static true\n\t     * @name ajax\n\t     * @owner Observable\n\t    */\n\t    AjaxObservable.create = (function () {\n\t        var create = function (urlOrRequest) {\n\t            return new AjaxObservable(urlOrRequest);\n\t        };\n\t        create.get = ajaxGet;\n\t        create.post = ajaxPost;\n\t        create.delete = ajaxDelete;\n\t        create.put = ajaxPut;\n\t        create.patch = ajaxPatch;\n\t        create.getJSON = ajaxGetJSON;\n\t        return create;\n\t    })();\n\t    return AjaxObservable;\n\t}(Observable_1.Observable));\n\texports.AjaxObservable = AjaxObservable;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar AjaxSubscriber = (function (_super) {\n\t    __extends(AjaxSubscriber, _super);\n\t    function AjaxSubscriber(destination, request) {\n\t        _super.call(this, destination);\n\t        this.request = request;\n\t        this.done = false;\n\t        var headers = request.headers = request.headers || {};\n\t        // force CORS if requested\n\t        if (!request.crossDomain && !headers['X-Requested-With']) {\n\t            headers['X-Requested-With'] = 'XMLHttpRequest';\n\t        }\n\t        // ensure content type is set\n\t        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n\t            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n\t        }\n\t        // properly serialize body\n\t        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\t        this.send();\n\t    }\n\t    AjaxSubscriber.prototype.next = function (e) {\n\t        this.done = true;\n\t        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n\t        var response = new AjaxResponse(e, xhr, request);\n\t        destination.next(response);\n\t    };\n\t    AjaxSubscriber.prototype.send = function () {\n\t        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n\t        var createXHR = request.createXHR;\n\t        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n\t        if (xhr === errorObject_1.errorObject) {\n\t            this.error(errorObject_1.errorObject.e);\n\t        }\n\t        else {\n\t            this.xhr = xhr;\n\t            // set up the events before open XHR\n\t            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n\t            // You need to add the event listeners before calling open() on the request.\n\t            // Otherwise the progress events will not fire.\n\t            this.setupEvents(xhr, request);\n\t            // open XHR\n\t            var result = void 0;\n\t            if (user) {\n\t                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n\t            }\n\t            else {\n\t                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n\t            }\n\t            if (result === errorObject_1.errorObject) {\n\t                this.error(errorObject_1.errorObject.e);\n\t                return null;\n\t            }\n\t            // timeout, responseType and withCredentials can be set once the XHR is open\n\t            xhr.timeout = request.timeout;\n\t            xhr.responseType = request.responseType;\n\t            if ('withCredentials' in xhr) {\n\t                xhr.withCredentials = !!request.withCredentials;\n\t            }\n\t            // set headers\n\t            this.setHeaders(xhr, headers);\n\t            // finally send the request\n\t            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n\t            if (result === errorObject_1.errorObject) {\n\t                this.error(errorObject_1.errorObject.e);\n\t                return null;\n\t            }\n\t        }\n\t        return xhr;\n\t    };\n\t    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n\t        if (!body || typeof body === 'string') {\n\t            return body;\n\t        }\n\t        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n\t            return body;\n\t        }\n\t        if (contentType) {\n\t            var splitIndex = contentType.indexOf(';');\n\t            if (splitIndex !== -1) {\n\t                contentType = contentType.substring(0, splitIndex);\n\t            }\n\t        }\n\t        switch (contentType) {\n\t            case 'application/x-www-form-urlencoded':\n\t                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n\t            case 'application/json':\n\t                return JSON.stringify(body);\n\t            default:\n\t                return body;\n\t        }\n\t    };\n\t    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n\t        for (var key in headers) {\n\t            if (headers.hasOwnProperty(key)) {\n\t                xhr.setRequestHeader(key, headers[key]);\n\t            }\n\t        }\n\t    };\n\t    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n\t        var progressSubscriber = request.progressSubscriber;\n\t        function xhrTimeout(e) {\n\t            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n\t            if (progressSubscriber) {\n\t                progressSubscriber.error(e);\n\t            }\n\t            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n\t        }\n\t        ;\n\t        xhr.ontimeout = xhrTimeout;\n\t        xhrTimeout.request = request;\n\t        xhrTimeout.subscriber = this;\n\t        xhrTimeout.progressSubscriber = progressSubscriber;\n\t        if (xhr.upload && 'withCredentials' in xhr) {\n\t            if (progressSubscriber) {\n\t                var xhrProgress_1;\n\t                xhrProgress_1 = function (e) {\n\t                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n\t                    progressSubscriber.next(e);\n\t                };\n\t                if (root_1.root.XDomainRequest) {\n\t                    xhr.onprogress = xhrProgress_1;\n\t                }\n\t                else {\n\t                    xhr.upload.onprogress = xhrProgress_1;\n\t                }\n\t                xhrProgress_1.progressSubscriber = progressSubscriber;\n\t            }\n\t            var xhrError_1;\n\t            xhrError_1 = function (e) {\n\t                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n\t                if (progressSubscriber) {\n\t                    progressSubscriber.error(e);\n\t                }\n\t                subscriber.error(new AjaxError('ajax error', this, request));\n\t            };\n\t            xhr.onerror = xhrError_1;\n\t            xhrError_1.request = request;\n\t            xhrError_1.subscriber = this;\n\t            xhrError_1.progressSubscriber = progressSubscriber;\n\t        }\n\t        function xhrReadyStateChange(e) {\n\t            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n\t            if (this.readyState === 4) {\n\t                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\t                var status_1 = this.status === 1223 ? 204 : this.status;\n\t                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n\t                // fix status code when it is 0 (0 status is undocumented).\n\t                // Occurs when accessing file resources or on Android 4.1 stock browser\n\t                // while retrieving files from application cache.\n\t                if (status_1 === 0) {\n\t                    status_1 = response ? 200 : 0;\n\t                }\n\t                if (200 <= status_1 && status_1 < 300) {\n\t                    if (progressSubscriber) {\n\t                        progressSubscriber.complete();\n\t                    }\n\t                    subscriber.next(e);\n\t                    subscriber.complete();\n\t                }\n\t                else {\n\t                    if (progressSubscriber) {\n\t                        progressSubscriber.error(e);\n\t                    }\n\t                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n\t                }\n\t            }\n\t        }\n\t        ;\n\t        xhr.onreadystatechange = xhrReadyStateChange;\n\t        xhrReadyStateChange.subscriber = this;\n\t        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n\t        xhrReadyStateChange.request = request;\n\t    };\n\t    AjaxSubscriber.prototype.unsubscribe = function () {\n\t        var _a = this, done = _a.done, xhr = _a.xhr;\n\t        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n\t            xhr.abort();\n\t        }\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    return AjaxSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.AjaxSubscriber = AjaxSubscriber;\n\t/**\n\t * A normalized AJAX response.\n\t *\n\t * @see {@link ajax}\n\t *\n\t * @class AjaxResponse\n\t */\n\tvar AjaxResponse = (function () {\n\t    function AjaxResponse(originalEvent, xhr, request) {\n\t        this.originalEvent = originalEvent;\n\t        this.xhr = xhr;\n\t        this.request = request;\n\t        this.status = xhr.status;\n\t        this.responseType = xhr.responseType || request.responseType;\n\t        switch (this.responseType) {\n\t            case 'json':\n\t                if ('response' in xhr) {\n\t                    //IE does not support json as responseType, parse it internally\n\t                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n\t                }\n\t                else {\n\t                    this.response = JSON.parse(xhr.responseText || 'null');\n\t                }\n\t                break;\n\t            case 'xml':\n\t                this.response = xhr.responseXML;\n\t                break;\n\t            case 'text':\n\t            default:\n\t                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n\t                break;\n\t        }\n\t    }\n\t    return AjaxResponse;\n\t}());\n\texports.AjaxResponse = AjaxResponse;\n\t/**\n\t * A normalized AJAX error.\n\t *\n\t * @see {@link ajax}\n\t *\n\t * @class AjaxError\n\t */\n\tvar AjaxError = (function (_super) {\n\t    __extends(AjaxError, _super);\n\t    function AjaxError(message, xhr, request) {\n\t        _super.call(this, message);\n\t        this.message = message;\n\t        this.xhr = xhr;\n\t        this.request = request;\n\t        this.status = xhr.status;\n\t    }\n\t    return AjaxError;\n\t}(Error));\n\texports.AjaxError = AjaxError;\n\t/**\n\t * @see {@link ajax}\n\t *\n\t * @class AjaxTimeoutError\n\t */\n\tvar AjaxTimeoutError = (function (_super) {\n\t    __extends(AjaxTimeoutError, _super);\n\t    function AjaxTimeoutError(xhr, request) {\n\t        _super.call(this, 'ajax timeout', xhr, request);\n\t    }\n\t    return AjaxTimeoutError;\n\t}(AjaxError));\n\texports.AjaxTimeoutError = AjaxTimeoutError;\n\t//# sourceMappingURL=AjaxObservable.js.map\n\n/***/ },\n\n/***/ 926:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar AjaxObservable_1 = __webpack_require__(925);\n\texports.ajax = AjaxObservable_1.AjaxObservable.create;\n\t//# sourceMappingURL=ajax.js.map\n\n/***/ },\n\n/***/ 929:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar OuterSubscriber_1 = __webpack_require__(147);\n\tvar subscribeToResult_1 = __webpack_require__(149);\n\t/**\n\t * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n\t *\n\t * <img src=\"./img/catch.png\" width=\"100%\">\n\t *\n\t * @example <caption>Continues with a different Observable when there's an error</caption>\n\t *\n\t * Observable.of(1, 2, 3, 4, 5)\n\t *   .map(n => {\n\t * \t   if (n == 4) {\n\t * \t     throw 'four!';\n\t *     }\n\t *\t   return n;\n\t *   })\n\t *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n\t *   .subscribe(x => console.log(x));\n\t *   // 1, 2, 3, I, II, III, IV, V\n\t *\n\t * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n\t *\n\t * Observable.of(1, 2, 3, 4, 5)\n\t *   .map(n => {\n\t * \t   if (n === 4) {\n\t * \t     throw 'four!';\n\t *     }\n\t * \t   return n;\n\t *   })\n\t *   .catch((err, caught) => caught)\n\t *   .take(30)\n\t *   .subscribe(x => console.log(x));\n\t *   // 1, 2, 3, 1, 2, 3, ...\n\t *\n\t * @example <caption>Throws a new error when the source Observable throws an error</caption>\n\t *\n\t * Observable.of(1, 2, 3, 4, 5)\n\t *   .map(n => {\n\t *     if (n == 4) {\n\t *       throw 'four!';\n\t *     }\n\t *     return n;\n\t *   })\n\t *   .catch(err => {\n\t *     throw 'error in source. Details: ' + err;\n\t *   })\n\t *   .subscribe(\n\t *     x => console.log(x),\n\t *     err => console.log(err)\n\t *   );\n\t *   // 1, 2, 3, error in source. Details: four!\n\t *\n\t * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n\t *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n\t *  is returned by the `selector` will be used to continue the observable chain.\n\t * @return {Observable} An observable that originates from either the source or the observable returned by the\n\t *  catch `selector` function.\n\t * @method catch\n\t * @name catch\n\t * @owner Observable\n\t */\n\tfunction _catch(selector) {\n\t    var operator = new CatchOperator(selector);\n\t    var caught = this.lift(operator);\n\t    return (operator.caught = caught);\n\t}\n\texports._catch = _catch;\n\tvar CatchOperator = (function () {\n\t    function CatchOperator(selector) {\n\t        this.selector = selector;\n\t    }\n\t    CatchOperator.prototype.call = function (subscriber, source) {\n\t        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n\t    };\n\t    return CatchOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar CatchSubscriber = (function (_super) {\n\t    __extends(CatchSubscriber, _super);\n\t    function CatchSubscriber(destination, selector, caught) {\n\t        _super.call(this, destination);\n\t        this.selector = selector;\n\t        this.caught = caught;\n\t    }\n\t    // NOTE: overriding `error` instead of `_error` because we don't want\n\t    // to have this flag this subscriber as `isStopped`. We can mimic the\n\t    // behavior of the RetrySubscriber (from the `retry` operator), where\n\t    // we unsubscribe from our source chain, reset our Subscriber flags,\n\t    // then subscribe to the selector result.\n\t    CatchSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var result = void 0;\n\t            try {\n\t                result = this.selector(err, this.caught);\n\t            }\n\t            catch (err2) {\n\t                _super.prototype.error.call(this, err2);\n\t                return;\n\t            }\n\t            this._unsubscribeAndRecycle();\n\t            this.add(subscribeToResult_1.subscribeToResult(this, result));\n\t        }\n\t    };\n\t    return CatchSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\t//# sourceMappingURL=catch.js.map\n\n/***/ },\n\n/***/ 930:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(16);\n\tvar isScheduler_1 = __webpack_require__(240);\n\tvar ArrayObservable_1 = __webpack_require__(148);\n\tvar mergeAll_1 = __webpack_require__(415);\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Creates an output Observable which sequentially emits all values from every\n\t * given input Observable after the current Observable.\n\t *\n\t * <span class=\"informal\">Concatenates multiple Observables together by\n\t * sequentially emitting their values, one Observable after the other.</span>\n\t *\n\t * <img src=\"./img/concat.png\" width=\"100%\">\n\t *\n\t * Joins this Observable with multiple other Observables by subscribing to them\n\t * one at a time, starting with the source, and merging their results into the\n\t * output Observable. Will wait for each Observable to complete before moving\n\t * on to the next.\n\t *\n\t * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n\t * var timer = Rx.Observable.interval(1000).take(4);\n\t * var sequence = Rx.Observable.range(1, 10);\n\t * var result = timer.concat(sequence);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in:\n\t * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n\t *\n\t * @example <caption>Concatenate 3 Observables</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var result = timer1.concat(timer2, timer3);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in the following:\n\t * // (Prints to console sequentially)\n\t * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n\t * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n\t * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n\t *\n\t * @see {@link concatAll}\n\t * @see {@link concatMap}\n\t * @see {@link concatMapTo}\n\t *\n\t * @param {ObservableInput} other An input Observable to concatenate after the source\n\t * Observable. More than one input Observables may be given as argument.\n\t * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n\t * Observable subscription on.\n\t * @return {Observable} All values of each passed Observable merged into a\n\t * single Observable, in order, in serial fashion.\n\t * @method concat\n\t * @owner Observable\n\t */\n\tfunction concat() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n\t}\n\texports.concat = concat;\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Creates an output Observable which sequentially emits all values from given\n\t * Observable and then moves on to the next.\n\t *\n\t * <span class=\"informal\">Concatenates multiple Observables together by\n\t * sequentially emitting their values, one Observable after the other.</span>\n\t *\n\t * <img src=\"./img/concat.png\" width=\"100%\">\n\t *\n\t * `concat` joins multiple Observables together, by subscribing to them one at a time and\n\t * merging their results into the output Observable. You can pass either an array of\n\t * Observables, or put them directly as arguments. Passing an empty array will result\n\t * in Observable that completes immediately.\n\t *\n\t * `concat` will subscribe to first input Observable and emit all its values, without\n\t * changing or affecting them in any way. When that Observable completes, it will\n\t * subscribe to then next Observable passed and, again, emit its values. This will be\n\t * repeated, until the operator runs out of Observables. When last input Observable completes,\n\t * `concat` will complete as well. At any given moment only one Observable passed to operator\n\t * emits values. If you would like to emit values from passed Observables concurrently, check out\n\t * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n\t * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n\t *\n\t * Note that if some input Observable never completes, `concat` will also never complete\n\t * and Observables following the one that did not complete will never be subscribed. On the other\n\t * hand, if some Observable simply completes immediately after it is subscribed, it will be\n\t * invisible for `concat`, which will just move on to the next Observable.\n\t *\n\t * If any Observable in chain errors, instead of passing control to the next Observable,\n\t * `concat` will error immediately as well. Observables that would be subscribed after\n\t * the one that emitted error, never will.\n\t *\n\t * If you pass to `concat` the same Observable many times, its stream of values\n\t * will be \"replayed\" on every subscription, which means you can repeat given Observable\n\t * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n\t * you can always use {@link repeat}.\n\t *\n\t * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n\t * var timer = Rx.Observable.interval(1000).take(4);\n\t * var sequence = Rx.Observable.range(1, 10);\n\t * var result = Rx.Observable.concat(timer, sequence);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in:\n\t * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n\t *\n\t *\n\t * @example <caption>Concatenate an array of 3 Observables</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in the following:\n\t * // (Prints to console sequentially)\n\t * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n\t * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n\t * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n\t *\n\t *\n\t * @example <caption>Concatenate the same Observable to repeat it</caption>\n\t * const timer = Rx.Observable.interval(1000).take(2);\n\t *\n\t * Rx.Observable.concat(timer, timer) // concating the same Observable!\n\t * .subscribe(\n\t *   value => console.log(value),\n\t *   err => {},\n\t *   () => console.log('...and it is done!')\n\t * );\n\t *\n\t * // Logs:\n\t * // 0 after 1s\n\t * // 1 after 2s\n\t * // 0 after 3s\n\t * // 1 after 4s\n\t * // \"...and it is done!\" also after 4s\n\t *\n\t * @see {@link concatAll}\n\t * @see {@link concatMap}\n\t * @see {@link concatMapTo}\n\t *\n\t * @param {ObservableInput} input1 An input Observable to concatenate with others.\n\t * @param {ObservableInput} input2 An input Observable to concatenate with others.\n\t * More than one input Observables may be given as argument.\n\t * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n\t * Observable subscription on.\n\t * @return {Observable} All values of each passed Observable merged into a\n\t * single Observable, in order, in serial fashion.\n\t * @static true\n\t * @name concat\n\t * @owner Observable\n\t */\n\tfunction concatStatic() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    var scheduler = null;\n\t    var args = observables;\n\t    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n\t        scheduler = args.pop();\n\t    }\n\t    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n\t        return observables[0];\n\t    }\n\t    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n\t}\n\texports.concatStatic = concatStatic;\n\t//# sourceMappingURL=concat.js.map\n\n/***/ },\n\n/***/ 931:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(31);\n\tvar async_1 = __webpack_require__(938);\n\t/**\n\t * Emits a value from the source Observable only after a particular time span\n\t * has passed without another source emission.\n\t *\n\t * <span class=\"informal\">It's like {@link delay}, but passes only the most\n\t * recent value from each burst of emissions.</span>\n\t *\n\t * <img src=\"./img/debounceTime.png\" width=\"100%\">\n\t *\n\t * `debounceTime` delays values emitted by the source Observable, but drops\n\t * previous pending delayed emissions if a new value arrives on the source\n\t * Observable. This operator keeps track of the most recent value from the\n\t * source Observable, and emits that only when `dueTime` enough time has passed\n\t * without any other value appearing on the source Observable. If a new value\n\t * appears before `dueTime` silence occurs, the previous value will be dropped\n\t * and will not be emitted on the output Observable.\n\t *\n\t * This is a rate-limiting operator, because it is impossible for more than one\n\t * value to be emitted in any time window of duration `dueTime`, but it is also\n\t * a delay-like operator since output emissions do not occur at the same time as\n\t * they did on the source Observable. Optionally takes a {@link IScheduler} for\n\t * managing timers.\n\t *\n\t * @example <caption>Emit the most recent click after a burst of clicks</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var result = clicks.debounceTime(1000);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @see {@link auditTime}\n\t * @see {@link debounce}\n\t * @see {@link delay}\n\t * @see {@link sampleTime}\n\t * @see {@link throttleTime}\n\t *\n\t * @param {number} dueTime The timeout duration in milliseconds (or the time\n\t * unit determined internally by the optional `scheduler`) for the window of\n\t * time required to wait for emission silence before emitting the most recent\n\t * source value.\n\t * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n\t * managing the timers that handle the timeout for each value.\n\t * @return {Observable} An Observable that delays the emissions of the source\n\t * Observable by the specified `dueTime`, and may drop some values if they occur\n\t * too frequently.\n\t * @method debounceTime\n\t * @owner Observable\n\t */\n\tfunction debounceTime(dueTime, scheduler) {\n\t    if (scheduler === void 0) { scheduler = async_1.async; }\n\t    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n\t}\n\texports.debounceTime = debounceTime;\n\tvar DebounceTimeOperator = (function () {\n\t    function DebounceTimeOperator(dueTime, scheduler) {\n\t        this.dueTime = dueTime;\n\t        this.scheduler = scheduler;\n\t    }\n\t    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n\t        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n\t    };\n\t    return DebounceTimeOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar DebounceTimeSubscriber = (function (_super) {\n\t    __extends(DebounceTimeSubscriber, _super);\n\t    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n\t        _super.call(this, destination);\n\t        this.dueTime = dueTime;\n\t        this.scheduler = scheduler;\n\t        this.debouncedSubscription = null;\n\t        this.lastValue = null;\n\t        this.hasValue = false;\n\t    }\n\t    DebounceTimeSubscriber.prototype._next = function (value) {\n\t        this.clearDebounce();\n\t        this.lastValue = value;\n\t        this.hasValue = true;\n\t        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n\t    };\n\t    DebounceTimeSubscriber.prototype._complete = function () {\n\t        this.debouncedNext();\n\t        this.destination.complete();\n\t    };\n\t    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n\t        this.clearDebounce();\n\t        if (this.hasValue) {\n\t            this.destination.next(this.lastValue);\n\t            this.lastValue = null;\n\t            this.hasValue = false;\n\t        }\n\t    };\n\t    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n\t        var debouncedSubscription = this.debouncedSubscription;\n\t        if (debouncedSubscription !== null) {\n\t            this.remove(debouncedSubscription);\n\t            debouncedSubscription.unsubscribe();\n\t            this.debouncedSubscription = null;\n\t        }\n\t    };\n\t    return DebounceTimeSubscriber;\n\t}(Subscriber_1.Subscriber));\n\tfunction dispatchNext(subscriber) {\n\t    subscriber.debouncedNext();\n\t}\n\t//# sourceMappingURL=debounceTime.js.map\n\n/***/ },\n\n/***/ 938:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar AsyncAction_1 = __webpack_require__(418);\n\tvar AsyncScheduler_1 = __webpack_require__(419);\n\t/**\n\t *\n\t * Async Scheduler\n\t *\n\t * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n\t *\n\t * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n\t * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n\t * in intervals.\n\t *\n\t * If you just want to \"defer\" task, that is to perform it right after currently\n\t * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n\t * better choice will be the {@link asap} scheduler.\n\t *\n\t * @example <caption>Use async scheduler to delay task</caption>\n\t * const task = () => console.log('it works!');\n\t *\n\t * Rx.Scheduler.async.schedule(task, 2000);\n\t *\n\t * // After 2 seconds logs:\n\t * // \"it works!\"\n\t *\n\t *\n\t * @example <caption>Use async scheduler to repeat task in intervals</caption>\n\t * function task(state) {\n\t *   console.log(state);\n\t *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n\t *                                   // which we reschedule with new state and delay\n\t * }\n\t *\n\t * Rx.Scheduler.async.schedule(task, 3000, 0);\n\t *\n\t * // Logs:\n\t * // 0 after 3s\n\t * // 1 after 4s\n\t * // 2 after 5s\n\t * // 3 after 6s\n\t *\n\t * @static true\n\t * @name async\n\t * @owner Scheduler\n\t */\n\texports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n\t//# sourceMappingURL=async.js.map\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.dc3c720a.chunk.js","/**\n * SkyscrapersList constants\n */\n\n/**\n * When the user updates the search text\n */\nexport const CHANGE_SEARCH_TXT = 'skyscrapers/SkyscrapersList/CHANGE_SEARCH_TXT';\n\n/**\n * The AJAX search request for matching skyscrapers starts\n */\nexport const AJAX_SEARCH_START = 'skyscrapers/SkyscrapersList/AJAX_SEARCH_START';\n\n/**\n * The AJAX search request successfully ends\n */\nexport const AJAX_SEARCH_END = 'skyscrapers/SkyscrapersList/AJAX_SEARCH_END';\n\n/**\n * The AJAX search request fails\n */\nexport const AJAX_SEARCH_FAIL = 'skyscrapers/SkyscrapersList/AJAX_SEARCH_FAIL';\n\n/**\n * The user visited the page the first time \n */\nexport const INITIAL_LOAD = 'skyscrapers/SkyscrapersList/INITIAL_LOAD';\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/constants.js","import { createSelector } from 'reselect';\n\nexport const selectSkyscrapers = () => state => state.get('skyscrapers');\n\nexport const selectLoading = () => createSelector(\n  selectSkyscrapers(),\n  skyscrapers => skyscrapers.get('loading'),\n);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/selectors.js","import React from 'react';\nimport SkyscrapersList from 'containers/SkyscrapersList';\nimport { Grid } from 'semantic-ui-react';\n\nconst { Column } = Grid;\n\nconst Home = () => (\n  <Grid columns={2} centered>\n    <Column>\n      <SkyscrapersList />\n    </Column>\n  </Grid>\n);\n\nexport default Home;\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/HomePage/index.js","import createActionCreator from 'utils/createActionCreator';\nimport {\n  CHANGE_SEARCH_TXT,\n  AJAX_SEARCH_START,\n  AJAX_SEARCH_END,\n  AJAX_SEARCH_FAIL,\n  INITIAL_LOAD,\n} from './constants';\n\n/**\n * When the user updates the search text\n */\nexport const changeSearchTxt = createActionCreator(CHANGE_SEARCH_TXT);\n\n/**\n * The AJAX search request for matching skyscrapers starts\n */\nexport const ajaxSearchStart = createActionCreator(AJAX_SEARCH_START);\n\n/**\n * The AJAX search request successfully ends\n */\nexport const ajaxSearchEnd = createActionCreator(AJAX_SEARCH_END);\n\n/**\n * The AJAX search request fails\n */\nexport const ajaxSearchFail = createActionCreator(AJAX_SEARCH_FAIL);\n\n/**\n * The user visited the page the first time \n */\nexport const initialLoad = createActionCreator(INITIAL_LOAD);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/actions.js","import { combineEpics } from 'redux-observable';\nimport searchEpic from './Search/epic';\n\nconst epic = combineEpics(searchEpic);\n\nexport default epic;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/epic.js","import { fromJS } from 'immutable';\nimport listReducer, { initialState as initialListState } from './List/reducer';\nimport {\n  AJAX_SEARCH_START,\n  AJAX_SEARCH_END,\n  AJAX_SEARCH_FAIL,\n} from './constants';\n\nexport const initialState = fromJS({\n  list: initialListState,\n  loading: false,\n});\n\nconst reducer = (state = initialState, action) => {\n  const { type } = action;\n  switch (type) {\n    case AJAX_SEARCH_START:\n      return state.set('loading', true);\n    case AJAX_SEARCH_END:\n      state = state.set('loading', false);\n      return state.set('list', listReducer(state.get('list'), action));\n    case AJAX_SEARCH_FAIL:\n      return state.set('loading', false);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/reducer.js","import React from 'react';\nimport {\n  Card,\n  Image,\n  Statistic,\n} from 'semantic-ui-react';\n\nconst {\n  Header: CardHeader,\n  Content: CardContent,\n} = Card;\n\nexport const ItemComponent = ({ skyscraper }) => (\n  <Card>\n    <Image fluid src=\"https://placehold.it/200/\" alt={skyscraper.get('title')} />\n    <CardContent>\n      <CardHeader>{skyscraper.get('title')}</CardHeader>\n    </CardContent>\n    <CardContent extra>\n      <Statistic value={skyscraper.get('floors')} label=\"floors\" size=\"mini\"/>\n      <Statistic value={skyscraper.get('height')} label=\"height\" size=\"mini\"/>\n    </CardContent>\n  </Card>\n);\n\nexport default ItemComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/Item/index.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Card, Loader} from 'semantic-ui-react';\nimport { selectList } from './selectors';\nimport { selectLoading } from '../selectors';\nimport Item from '../Item';\n\nexport const ListComponent = ({ list, loading }) => {\n  return (\n    <Card.Group itemsPerRow={2} style={{ minHeight: '200px' }}>\n      <Loader active={loading}>Loading...</Loader>\n      {!loading && list.map(item => <Item key={item.get('id')} skyscraper={item}/>)}\n    </Card.Group>\n  )\n};\n\nconst mapStateToProps = createStructuredSelector({\n  list: selectList(),\n  loading: selectLoading(),\n});\n\nexport default connect(mapStateToProps)(ListComponent);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/List/index.js","import { List, Map } from 'immutable';\nimport {\n  AJAX_SEARCH_END,\n} from '../constants';\n\nexport const initialState = new List();\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case AJAX_SEARCH_END:\n      return new List(payload.data.skyscraper.list.map(item => new Map(item)));\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/List/reducer.js","import { createSelector } from 'reselect';\nimport { selectSkyscrapers } from '../selectors';\n\nexport const selectList = () => createSelector(\n  selectSkyscrapers(),\n  skyscrapers => skyscrapers.get('list'),\n);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/List/selectors.js","import 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/merge';\nimport 'rxjs/add/operator/switchMap';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { concat as concat$ } from 'rxjs/observable/concat';\nimport { of as of$ } from 'rxjs/observable/of';\nimport { ajax } from 'rxjs/observable/dom/ajax';\nimport {\n  CHANGE_SEARCH_TXT,\n} from '../constants';\nimport {\n  ajaxSearchStart,\n  ajaxSearchEnd,\n  ajaxSearchFail,\n  changeSearchTxt,\n} from '../actions';\nimport { getQuery } from '../schema';\n\n/**\n * SkyscrapersList epic\n * Coordinates the redux side effects\n */\nconst epic = (action$) => \n  \n  action$\n\n    // Emit changeSearchTxt() action once. So skyscrapers are preloaded when first \n    // visited\n    .merge(new BehaviorSubject(changeSearchTxt(void 0, 'preload')))\n    \n    // react only to CHANGE_SEARCH_TXT actions\n    .ofType(CHANGE_SEARCH_TXT)\n\n    // debounce so that we do not fire AJAX request on every keyup\n    .debounceTime(300)\n\n    // convert action stream to the ajax start and end/fail actions\n    // we use switchMap that helps us convert the actions and at the same\n    // time it automatically unsubscribes the previous observables when new\n    // one comes in with values that allows us handle AJAX cancellation\n    .switchMap(action => concat$(\n\n      // For each ajax request we fire AJAC_SEARCH_START action\n      of$(ajaxSearchStart()),\n\n      // make an ajax request\n      ajax({\n        url: process.env.REACT_APP_GRAPHQL_URL,\n        body: {\n          query: getQuery(),\n          variables: JSON.stringify({ selector: action.payload ? `title|body*=${action.payload}` : \"\" })\n        },\n        method: 'POST',\n      })\n\n        // fire AJAX_SEARCH_END action when successfully requested\n        .map((xhr) => ajaxSearchEnd(xhr.response))\n\n        // fire AJAC_SEARCH_FAIL action if request is note successful\n        .catch(e => of$(ajaxSearchFail(e)))\n    ))\n\n\nexport default epic;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/Search/epic.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Input } from 'semantic-ui-react';\nimport {\n  changeSearchTxt,\n} from '../actions';\nimport { selectLoading } from '../selectors';\n\nexport const SearchComponent = ({ handleChange, loading }) => (\n  <Input\n    fluid\n    icon=\"search\"\n    placeholder=\"Search skyscrapers...\"\n    onChange={handleChange}\n    loading={loading}\n  />\n);\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectLoading(),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleChange: (ev) => dispatch(changeSearchTxt(ev.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/Search/index.js","import React from 'react';\nimport List from './List';\nimport Search from './Search';\nimport { Divider } from 'semantic-ui-react';\n\nconst SkyscrapersListComponent = () => (\n  <div>\n    <Search />\n    <Divider hidden />\n    <List />\n  </div>\n);\n\nexport default SkyscrapersListComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/index.js","const query = `query skyscrapers($selector: Selector){\n  skyscraper(s: $selector){\n    getTotal\n    getLimit\n    getStart\n    list{\n      id\n      title\n      height\n      floors\n      year\n      parentID\n      map{\n        lat\n        lng\n      }\n      architects{\n       \tlist{\n          title\n          id\n        } \n      }\n    }\n  }\n}`;\n\nexport const getQuery = () => query;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/SkyscrapersList/schema.js","\n/**\n * Method that creates flux action creators\n * Fist call with the type arguments returns the action creator with defined type.\n * Second call accepts payload & meta\n * @argument {string} type       Flux action type constant.\n * @argument {mixed}  payload    The flux action payload.\n * @argument {object} meta       Flux action meta property.\n * @return   {function}          First call returns the actionCreator function\n * @return   {function}          Second call returns Flux action object with payload & meta properties\n */\nconst createActionCreator = (type) => (payload, meta) => ({\n  type,\n  payload,\n  meta,\n});\n\nexport default createActionCreator;\n\n\n// WEBPACK FOOTER //\n// ./src/utils/createActionCreator.js","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/BehaviorSubject.js\n// module id = 908\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/catch.js\n// module id = 912\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounceTime_1 = require('../../operator/debounceTime');\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/debounceTime.js\n// module id = 913\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 915\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../operator/merge');\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/merge.js\n// module id = 917\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMap.js\n// module id = 919\n// module chunks = 1","\"use strict\";\nvar concat_1 = require('../operator/concat');\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/concat.js\n// module id = 924\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../../util/root');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar Observable_1 = require('../../Observable');\nvar Subscriber_1 = require('../../Subscriber');\nvar map_1 = require('../../operator/map');\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\n;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nexports.ajaxPatch = ajaxPatch;\n;\nfunction ajaxGetJSON(url, headers) {\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable_1.Observable));\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            xhr.timeout = request.timeout;\n            xhr.responseType = request.responseType;\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root_1.root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        switch (this.responseType) {\n            case 'json':\n                if ('response' in xhr) {\n                    //IE does not support json as responseType, parse it internally\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n                }\n                else {\n                    this.response = JSON.parse(xhr.responseText || 'null');\n                }\n                break;\n            case 'xml':\n                this.response = xhr.responseXML;\n                break;\n            case 'text':\n            default:\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n                break;\n        }\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/AjaxObservable.js\n// module id = 925\n// module chunks = 1","\"use strict\";\nvar AjaxObservable_1 = require('./AjaxObservable');\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/ajax.js\n// module id = 926\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/catch.js\n// module id = 929\n// module chunks = 1","\"use strict\";\nvar Observable_1 = require('../Observable');\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 930\n// module chunks = 1","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/debounceTime.js\n// module id = 931\n// module chunks = 1","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/async.js\n// module id = 938\n// module chunks = 1"],"sourceRoot":""}
{"version":3,"sources":["webpack:///static/js/2.7169496d.chunk.js","webpack:///./src/containers/Cities/constants.js?0f84","webpack:///./~/rxjs/add/operator/switchMap.js?ff90","webpack:///./src/containers/Cities/epic.js?a55b","webpack:///./src/containers/Cities/reducer.js?6254","webpack:///./~/rxjs/observable/concat.js?acc5","webpack:///./src/containers/Cities/List/selectors.js?c519","webpack:///./src/containers/Cities/actions.js?2d00","webpack:///./src/utils/createActionCreator.js?7002","webpack:///./~/rxjs/add/operator/catch.js?33c3","webpack:///./~/rxjs/add/operator/map.js?94b1","webpack:///./~/rxjs/observable/dom/ajax.js?b8d0","webpack:///./src/containers/Cities/List/epic.js?e955","webpack:///./src/containers/Cities/List/reducer.js?ed88","webpack:///./src/containers/Cities/schema.js?ee1a","webpack:///./src/containers/Cities/selectors.js?b9ac","webpack:///./~/rxjs/add/operator/takeWhile.js?123e","webpack:///./~/rxjs/observable/dom/AjaxObservable.js?87c2","webpack:///./~/rxjs/operator/catch.js?75c4","webpack:///./~/rxjs/operator/concat.js?a55d","webpack:///./~/rxjs/operator/takeWhile.js?659c","webpack:///./src/containers/Cities/index.js","webpack:///./src/containers/Cities/Filter/index.js","webpack:///./src/containers/Cities/Item/index.js","webpack:///./src/containers/Cities/List/index.js"],"names":["webpackJsonp","42","module","exports","Object","defineProperty","value","CHANGE_FILTER_TXT","AJAX_FETCH_START","AJAX_FETCH_END","AJAX_FETCH_FAIL","INITIAL_LOAD","92","__webpack_require__","Observable_1","switchMap_1","Observable","prototype","switchMap","94","_interopRequireDefault","obj","__esModule","default","_reduxObservable","_epic","_epic2","epic","combineEpics","listMoreCities","95","initialState","undefined","_immutable","_reducer","_reducer2","_constants","fromJS","list","filterTxt","reducer","state","arguments","length","action","type","payload","set","get","118","concat_1","concat","concatStatic","123","selectFilteredList","selectList","_reselect","_selectors","createSelector","selectCities","cities","selectFilterTxt","filterRegexp","RegExp","filter","item","test","124","initialLoad","ajaxFetchFail","ajaxFetchEnd","ajaxFetchStart","changeFilterTxt","_createActionCreator","_createActionCreator2","125","createActionCreator","meta","169","catch_1","catch","_catch","170","map_1","map","171","AjaxObservable_1","ajax","AjaxObservable","create","183","_concat","_of","_ajax","_actions","_schema","listCities","_ref","limit","start","selector","substr","of","url","body","query","getQuery","variables","JSON","stringify","method","xhr","response","e","action$","ofType","takeWhile","_action$payload$data$","data","city","getTotal","getLimit","getStart","_action$payload$data$2","184","_toConsumableArray","arr","Array","isArray","i","arr2","from","List","push","apply","Map","185","186","269","takeWhile_1","270","getCORSRequest","root_1","root","XMLHttpRequest","XDomainRequest","Error","getXMLHttpRequest","progId","progIds","ActiveXObject","ajaxGet","headers","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","ajaxGetJSON","responseType","lift","MapOperator","x","index","__extends","this","d","b","__","constructor","p","hasOwnProperty","tryCatch_1","errorObject_1","Subscriber_1","_super","urlOrRequest","call","request","async","createXHR","crossDomain","withCredentials","timeout","prop","_subscribe","subscriber","AjaxSubscriber","post","delete","put","patch","getJSON","destination","done","FormData","serializeBody","send","next","_a","AjaxResponse","_b","user","password","tryCatch","errorObject","error","setupEvents","result","open","setHeaders","contentType","splitIndex","indexOf","substring","keys","key","encodeURI","join","setRequestHeader","xhrTimeout","progressSubscriber","AjaxTimeoutError","xhrReadyStateChange","readyState","status_1","status","responseText","complete","AjaxError","ontimeout","upload","xhrProgress_1","onprogress","xhrError_1","onerror","onreadystatechange","unsubscribe","abort","Subscriber","originalEvent","parse","responseXML","message","271","operator","CatchOperator","caught","OuterSubscriber_1","subscribeToResult_1","source","subscribe","CatchSubscriber","err","isStopped","err2","_unsubscribeAndRecycle","add","subscribeToResult","OuterSubscriber","272","observables","_i","scheduler","args","isScheduler_1","isScheduler","pop","ArrayObservable_1","ArrayObservable","mergeAll_1","MergeAllOperator","275","predicate","TakeWhileOperator","TakeWhileSubscriber","_next","nextOrComplete","predicateResult","Boolean","307","_react","_react2","_List","_List2","_Filter","_Filter2","_semanticUiReact","CitiesComponent","createElement","Divider","hidden","566","FilterComponent","_reactRedux","handleChange","Input","fluid","icon","placeholder","onChange","mapDispatchToProps","dispatch","ev","target","connect","567","ItemComponent","CardHeader","Card","Header","CardContent","Content","Image","src","alt","569","ListComponent","_Item","_Item2","loading","Group","itemsPerRow","style","minHeight","mapStateToProps","createStructuredSelector"],"mappings":"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","file":"static/js/2.7169496d.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 42:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Cities constants\n\t */\n\t\n\t/**\n\t * When the user updates the search text\n\t */\n\tvar CHANGE_FILTER_TXT = exports.CHANGE_FILTER_TXT = 'skyscrapers/Cities/CHANGE_FILTER_TXT';\n\t\n\t/**\n\t * The AJAX search request for matching skyscrapers starts\n\t */\n\tvar AJAX_FETCH_START = exports.AJAX_FETCH_START = 'skyscrapers/Cities/AJAX_FETCH_START';\n\t\n\t/**\n\t * The AJAX search request successfully ends\n\t */\n\tvar AJAX_FETCH_END = exports.AJAX_FETCH_END = 'skyscrapers/Cities/AJAX_FETCH_END';\n\t\n\t/**\n\t * The AJAX search request fails\n\t */\n\tvar AJAX_FETCH_FAIL = exports.AJAX_FETCH_FAIL = 'skyscrapers/Cities/AJAX_FETCH_FAIL';\n\t\n\t/**\n\t * The user visited the page the first time \n\t */\n\tvar INITIAL_LOAD = exports.INITIAL_LOAD = 'skyscrapers/Cities/INITIAL_LOAD';\n\n/***/ },\n\n/***/ 92:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(13);\n\tvar switchMap_1 = __webpack_require__(274);\n\tObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n\t//# sourceMappingURL=switchMap.js.map\n\n/***/ },\n\n/***/ 94:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _reduxObservable = __webpack_require__(167);\n\t\n\tvar _epic = __webpack_require__(183);\n\t\n\tvar _epic2 = _interopRequireDefault(_epic);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar epic = (0, _reduxObservable.combineEpics)(_epic2.default, _epic.listMoreCities);\n\t\n\texports.default = epic;\n\n/***/ },\n\n/***/ 95:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.initialState = undefined;\n\t\n\tvar _immutable = __webpack_require__(21);\n\t\n\tvar _reducer = __webpack_require__(184);\n\t\n\tvar _reducer2 = _interopRequireDefault(_reducer);\n\t\n\tvar _constants = __webpack_require__(42);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar initialState = exports.initialState = (0, _immutable.fromJS)({\n\t  list: _reducer.initialState,\n\t  filterTxt: \"\"\n\t});\n\t\n\tvar reducer = function reducer() {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t  var action = arguments[1];\n\t  var type = action.type,\n\t      payload = action.payload;\n\t\n\t  switch (type) {\n\t    case _constants.AJAX_FETCH_END:\n\t      return state.set('list', (0, _reducer2.default)(state.get('list'), action));\n\t    case _constants.CHANGE_FILTER_TXT:\n\t      return state.set('filterTxt', payload);\n\t    default:\n\t      return state;\n\t  }\n\t};\n\t\n\texports.default = reducer;\n\n/***/ },\n\n/***/ 118:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar concat_1 = __webpack_require__(272);\n\texports.concat = concat_1.concatStatic;\n\t//# sourceMappingURL=concat.js.map\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.selectFilteredList = exports.selectList = undefined;\n\t\n\tvar _reselect = __webpack_require__(30);\n\t\n\tvar _selectors = __webpack_require__(186);\n\t\n\tvar selectList = exports.selectList = function selectList() {\n\t  return (0, _reselect.createSelector)((0, _selectors.selectCities)(), function (cities) {\n\t    return cities.get('list');\n\t  });\n\t};\n\t\n\tvar selectFilteredList = exports.selectFilteredList = function selectFilteredList() {\n\t  return (0, _reselect.createSelector)(selectList(), (0, _selectors.selectFilterTxt)(), function (list, filterTxt) {\n\t    if (!filterTxt) return list;\n\t    var filterRegexp = new RegExp(filterTxt, 'i', 'g');\n\t    return list.filter(function (item) {\n\t      return filterRegexp.test(item.get('title'));\n\t    });\n\t  });\n\t};\n\n/***/ },\n\n/***/ 124:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.initialLoad = exports.ajaxFetchFail = exports.ajaxFetchEnd = exports.ajaxFetchStart = exports.changeFilterTxt = undefined;\n\t\n\tvar _createActionCreator = __webpack_require__(125);\n\t\n\tvar _createActionCreator2 = _interopRequireDefault(_createActionCreator);\n\t\n\tvar _constants = __webpack_require__(42);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * When the user updates the search text\n\t */\n\tvar changeFilterTxt = exports.changeFilterTxt = (0, _createActionCreator2.default)(_constants.CHANGE_FILTER_TXT);\n\t\n\t/**\n\t * The AJAX search request for matching cities starts\n\t */\n\tvar ajaxFetchStart = exports.ajaxFetchStart = (0, _createActionCreator2.default)(_constants.AJAX_FETCH_START);\n\t\n\t/**\n\t * The AJAX search request successfully ends\n\t */\n\tvar ajaxFetchEnd = exports.ajaxFetchEnd = (0, _createActionCreator2.default)(_constants.AJAX_FETCH_END);\n\t\n\t/**\n\t * The AJAX search request fails\n\t */\n\tvar ajaxFetchFail = exports.ajaxFetchFail = (0, _createActionCreator2.default)(_constants.AJAX_FETCH_FAIL);\n\t\n\t/**\n\t * The user visited the page the first time \n\t */\n\tvar initialLoad = exports.initialLoad = (0, _createActionCreator2.default)(_constants.INITIAL_LOAD);\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/**\n\t * Method that creates flux action creators\n\t * Fist call with the type arguments returns the action creator with defined type.\n\t * Second call accepts payload & meta\n\t * @argument {string} type       Flux action type constant.\n\t * @argument {mixed}  payload    The flux action payload.\n\t * @argument {object} meta       Flux action meta property.\n\t * @return   {function}          First call returns the actionCreator function\n\t * @return   {function}          Second call returns Flux action object with payload & meta properties\n\t */\n\tvar createActionCreator = function createActionCreator(type) {\n\t  return function (payload, meta) {\n\t    return {\n\t      type: type,\n\t      payload: payload,\n\t      meta: meta\n\t    };\n\t  };\n\t};\n\t\n\texports.default = createActionCreator;\n\n/***/ },\n\n/***/ 169:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(13);\n\tvar catch_1 = __webpack_require__(271);\n\tObservable_1.Observable.prototype.catch = catch_1._catch;\n\tObservable_1.Observable.prototype._catch = catch_1._catch;\n\t//# sourceMappingURL=catch.js.map\n\n/***/ },\n\n/***/ 170:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(13);\n\tvar map_1 = __webpack_require__(120);\n\tObservable_1.Observable.prototype.map = map_1.map;\n\t//# sourceMappingURL=map.js.map\n\n/***/ },\n\n/***/ 171:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar AjaxObservable_1 = __webpack_require__(270);\n\texports.ajax = AjaxObservable_1.AjaxObservable.create;\n\t//# sourceMappingURL=ajax.js.map\n\n/***/ },\n\n/***/ 183:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.listMoreCities = undefined;\n\t\n\t__webpack_require__(170);\n\t\n\t__webpack_require__(269);\n\t\n\t__webpack_require__(92);\n\t\n\t__webpack_require__(169);\n\t\n\tvar _concat = __webpack_require__(118);\n\t\n\tvar _of = __webpack_require__(119);\n\t\n\tvar _ajax = __webpack_require__(171);\n\t\n\tvar _actions = __webpack_require__(124);\n\t\n\tvar _constants = __webpack_require__(42);\n\t\n\tvar _schema = __webpack_require__(185);\n\t\n\tvar listCities = function listCities() {\n\t  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t      limit = _ref.limit,\n\t      start = _ref.start;\n\t\n\t  var selector = \"\";\n\t  if (start) selector += ', start=' + start;\n\t  if (limit) selector += ', limit=' + limit;\n\t  selector = selector.substr(2);\n\t  return (0, _concat.concat)(\n\t\n\t  // For each ajax request we fire AJAX_FILTER_START action\n\t  (0, _of.of)((0, _actions.ajaxFetchStart)()),\n\t\n\t  // make an ajax request\n\t  (0, _ajax.ajax)({\n\t    url: (\"https://skyscrapers.nurgulyashyrov.com/graphql/\"),\n\t    body: {\n\t      query: (0, _schema.getQuery)(),\n\t      variables: JSON.stringify({ selector: selector })\n\t    },\n\t    method: 'POST'\n\t  })\n\t\n\t  // fire AJAX_FETCH_END action when successfully requested\n\t  .map(function (xhr) {\n\t    return (0, _actions.ajaxFetchEnd)(xhr.response);\n\t  })\n\t\n\t  // fire AJAX_FILTER_FAIL action if request is note successful\n\t  .catch(function (e) {\n\t    return (0, _of.of)((0, _actions.ajaxFetchFail)(e));\n\t  }));\n\t};\n\t\n\tvar listMoreCities = exports.listMoreCities = function listMoreCities(action$) {\n\t  return action$.ofType(_constants.AJAX_FETCH_END).takeWhile(function (action) {\n\t    var _action$payload$data$ = action.payload.data.city,\n\t        getTotal = _action$payload$data$.getTotal,\n\t        getLimit = _action$payload$data$.getLimit,\n\t        getStart = _action$payload$data$.getStart;\n\t\n\t    return getTotal > getLimit + getStart;\n\t  }).switchMap(function (action) {\n\t    var _action$payload$data$2 = action.payload.data.city,\n\t        getLimit = _action$payload$data$2.getLimit,\n\t        getStart = _action$payload$data$2.getStart;\n\t\n\t    return listCities({ start: getStart + getLimit });\n\t  });\n\t};\n\t\n\texports.default = listCities;\n\n/***/ },\n\n/***/ 184:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.initialState = undefined;\n\t\n\tvar _immutable = __webpack_require__(21);\n\t\n\tvar _constants = __webpack_require__(42);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar initialState = exports.initialState = new _immutable.List();\n\t\n\tvar reducer = function reducer() {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t  var action = arguments[1];\n\t  var type = action.type,\n\t      payload = action.payload;\n\t\n\t  switch (type) {\n\t    case _constants.AJAX_FETCH_END:\n\t      return state.push.apply(state, _toConsumableArray(payload.data.city.list.map(function (item) {\n\t        return new _immutable.Map(item);\n\t      })));\n\t    default:\n\t      return state;\n\t  }\n\t};\n\t\n\texports.default = reducer;\n\n/***/ },\n\n/***/ 185:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar query = \"query cities($selector: Selector){\\n  city(s: $selector){\\n    getTotal\\n    getLimit\\n    getStart\\n    list{\\n      id\\n      title\\n      skyscrapersCount: numChildren\\n      map{\\n        lat\\n        lng\\n      }\\n    }\\n  }\\n}\";\n\t\n\tvar getQuery = exports.getQuery = function getQuery() {\n\t  return query;\n\t};\n\n/***/ },\n\n/***/ 186:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.selectFilterTxt = exports.selectCities = undefined;\n\t\n\tvar _reselect = __webpack_require__(30);\n\t\n\tvar selectCities = exports.selectCities = function selectCities() {\n\t  return function (state) {\n\t    return state.get('cities');\n\t  };\n\t};\n\t\n\tvar selectFilterTxt = exports.selectFilterTxt = function selectFilterTxt() {\n\t  return (0, _reselect.createSelector)(selectCities(), function (cities) {\n\t    return cities.get('filterTxt');\n\t  });\n\t};\n\n/***/ },\n\n/***/ 269:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(13);\n\tvar takeWhile_1 = __webpack_require__(275);\n\tObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n\t//# sourceMappingURL=takeWhile.js.map\n\n/***/ },\n\n/***/ 270:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar root_1 = __webpack_require__(41);\n\tvar tryCatch_1 = __webpack_require__(279);\n\tvar errorObject_1 = __webpack_require__(172);\n\tvar Observable_1 = __webpack_require__(13);\n\tvar Subscriber_1 = __webpack_require__(27);\n\tvar map_1 = __webpack_require__(120);\n\tfunction getCORSRequest() {\n\t    if (root_1.root.XMLHttpRequest) {\n\t        return new root_1.root.XMLHttpRequest();\n\t    }\n\t    else if (!!root_1.root.XDomainRequest) {\n\t        return new root_1.root.XDomainRequest();\n\t    }\n\t    else {\n\t        throw new Error('CORS is not supported by your browser');\n\t    }\n\t}\n\tfunction getXMLHttpRequest() {\n\t    if (root_1.root.XMLHttpRequest) {\n\t        return new root_1.root.XMLHttpRequest();\n\t    }\n\t    else {\n\t        var progId = void 0;\n\t        try {\n\t            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\t            for (var i = 0; i < 3; i++) {\n\t                try {\n\t                    progId = progIds[i];\n\t                    if (new root_1.root.ActiveXObject(progId)) {\n\t                        break;\n\t                    }\n\t                }\n\t                catch (e) {\n\t                }\n\t            }\n\t            return new root_1.root.ActiveXObject(progId);\n\t        }\n\t        catch (e) {\n\t            throw new Error('XMLHttpRequest is not supported by your browser');\n\t        }\n\t    }\n\t}\n\tfunction ajaxGet(url, headers) {\n\t    if (headers === void 0) { headers = null; }\n\t    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n\t}\n\texports.ajaxGet = ajaxGet;\n\t;\n\tfunction ajaxPost(url, body, headers) {\n\t    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n\t}\n\texports.ajaxPost = ajaxPost;\n\t;\n\tfunction ajaxDelete(url, headers) {\n\t    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n\t}\n\texports.ajaxDelete = ajaxDelete;\n\t;\n\tfunction ajaxPut(url, body, headers) {\n\t    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n\t}\n\texports.ajaxPut = ajaxPut;\n\t;\n\tfunction ajaxPatch(url, body, headers) {\n\t    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n\t}\n\texports.ajaxPatch = ajaxPatch;\n\t;\n\tfunction ajaxGetJSON(url, headers) {\n\t    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n\t        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n\t}\n\texports.ajaxGetJSON = ajaxGetJSON;\n\t;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @extends {Ignored}\n\t * @hide true\n\t */\n\tvar AjaxObservable = (function (_super) {\n\t    __extends(AjaxObservable, _super);\n\t    function AjaxObservable(urlOrRequest) {\n\t        _super.call(this);\n\t        var request = {\n\t            async: true,\n\t            createXHR: function () {\n\t                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n\t            },\n\t            crossDomain: false,\n\t            withCredentials: false,\n\t            headers: {},\n\t            method: 'GET',\n\t            responseType: 'json',\n\t            timeout: 0\n\t        };\n\t        if (typeof urlOrRequest === 'string') {\n\t            request.url = urlOrRequest;\n\t        }\n\t        else {\n\t            for (var prop in urlOrRequest) {\n\t                if (urlOrRequest.hasOwnProperty(prop)) {\n\t                    request[prop] = urlOrRequest[prop];\n\t                }\n\t            }\n\t        }\n\t        this.request = request;\n\t    }\n\t    AjaxObservable.prototype._subscribe = function (subscriber) {\n\t        return new AjaxSubscriber(subscriber, this.request);\n\t    };\n\t    /**\n\t     * Creates an observable for an Ajax request with either a request object with\n\t     * url, headers, etc or a string for a URL.\n\t     *\n\t     * @example\n\t     * source = Rx.Observable.ajax('/products');\n\t     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n\t     *\n\t     * @param {string|Object} request Can be one of the following:\n\t     *   A string of the URL to make the Ajax call.\n\t     *   An object with the following properties\n\t     *   - url: URL of the request\n\t     *   - body: The body of the request\n\t     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n\t     *   - async: Whether the request is async\n\t     *   - headers: Optional headers\n\t     *   - crossDomain: true if a cross domain request, else false\n\t     *   - createXHR: a function to override if you need to use an alternate\n\t     *   XMLHttpRequest implementation.\n\t     *   - resultSelector: a function to use to alter the output value type of\n\t     *   the Observable. Gets {@link AjaxResponse} as an argument.\n\t     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n\t     * @static true\n\t     * @name ajax\n\t     * @owner Observable\n\t    */\n\t    AjaxObservable.create = (function () {\n\t        var create = function (urlOrRequest) {\n\t            return new AjaxObservable(urlOrRequest);\n\t        };\n\t        create.get = ajaxGet;\n\t        create.post = ajaxPost;\n\t        create.delete = ajaxDelete;\n\t        create.put = ajaxPut;\n\t        create.patch = ajaxPatch;\n\t        create.getJSON = ajaxGetJSON;\n\t        return create;\n\t    })();\n\t    return AjaxObservable;\n\t}(Observable_1.Observable));\n\texports.AjaxObservable = AjaxObservable;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar AjaxSubscriber = (function (_super) {\n\t    __extends(AjaxSubscriber, _super);\n\t    function AjaxSubscriber(destination, request) {\n\t        _super.call(this, destination);\n\t        this.request = request;\n\t        this.done = false;\n\t        var headers = request.headers = request.headers || {};\n\t        // force CORS if requested\n\t        if (!request.crossDomain && !headers['X-Requested-With']) {\n\t            headers['X-Requested-With'] = 'XMLHttpRequest';\n\t        }\n\t        // ensure content type is set\n\t        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n\t            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n\t        }\n\t        // properly serialize body\n\t        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\t        this.send();\n\t    }\n\t    AjaxSubscriber.prototype.next = function (e) {\n\t        this.done = true;\n\t        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n\t        var response = new AjaxResponse(e, xhr, request);\n\t        destination.next(response);\n\t    };\n\t    AjaxSubscriber.prototype.send = function () {\n\t        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n\t        var createXHR = request.createXHR;\n\t        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n\t        if (xhr === errorObject_1.errorObject) {\n\t            this.error(errorObject_1.errorObject.e);\n\t        }\n\t        else {\n\t            this.xhr = xhr;\n\t            // set up the events before open XHR\n\t            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n\t            // You need to add the event listeners before calling open() on the request.\n\t            // Otherwise the progress events will not fire.\n\t            this.setupEvents(xhr, request);\n\t            // open XHR\n\t            var result = void 0;\n\t            if (user) {\n\t                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n\t            }\n\t            else {\n\t                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n\t            }\n\t            if (result === errorObject_1.errorObject) {\n\t                this.error(errorObject_1.errorObject.e);\n\t                return null;\n\t            }\n\t            // timeout, responseType and withCredentials can be set once the XHR is open\n\t            xhr.timeout = request.timeout;\n\t            xhr.responseType = request.responseType;\n\t            if ('withCredentials' in xhr) {\n\t                xhr.withCredentials = !!request.withCredentials;\n\t            }\n\t            // set headers\n\t            this.setHeaders(xhr, headers);\n\t            // finally send the request\n\t            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n\t            if (result === errorObject_1.errorObject) {\n\t                this.error(errorObject_1.errorObject.e);\n\t                return null;\n\t            }\n\t        }\n\t        return xhr;\n\t    };\n\t    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n\t        if (!body || typeof body === 'string') {\n\t            return body;\n\t        }\n\t        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n\t            return body;\n\t        }\n\t        if (contentType) {\n\t            var splitIndex = contentType.indexOf(';');\n\t            if (splitIndex !== -1) {\n\t                contentType = contentType.substring(0, splitIndex);\n\t            }\n\t        }\n\t        switch (contentType) {\n\t            case 'application/x-www-form-urlencoded':\n\t                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n\t            case 'application/json':\n\t                return JSON.stringify(body);\n\t            default:\n\t                return body;\n\t        }\n\t    };\n\t    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n\t        for (var key in headers) {\n\t            if (headers.hasOwnProperty(key)) {\n\t                xhr.setRequestHeader(key, headers[key]);\n\t            }\n\t        }\n\t    };\n\t    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n\t        var progressSubscriber = request.progressSubscriber;\n\t        function xhrTimeout(e) {\n\t            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n\t            if (progressSubscriber) {\n\t                progressSubscriber.error(e);\n\t            }\n\t            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n\t        }\n\t        ;\n\t        xhr.ontimeout = xhrTimeout;\n\t        xhrTimeout.request = request;\n\t        xhrTimeout.subscriber = this;\n\t        xhrTimeout.progressSubscriber = progressSubscriber;\n\t        if (xhr.upload && 'withCredentials' in xhr) {\n\t            if (progressSubscriber) {\n\t                var xhrProgress_1;\n\t                xhrProgress_1 = function (e) {\n\t                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n\t                    progressSubscriber.next(e);\n\t                };\n\t                if (root_1.root.XDomainRequest) {\n\t                    xhr.onprogress = xhrProgress_1;\n\t                }\n\t                else {\n\t                    xhr.upload.onprogress = xhrProgress_1;\n\t                }\n\t                xhrProgress_1.progressSubscriber = progressSubscriber;\n\t            }\n\t            var xhrError_1;\n\t            xhrError_1 = function (e) {\n\t                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n\t                if (progressSubscriber) {\n\t                    progressSubscriber.error(e);\n\t                }\n\t                subscriber.error(new AjaxError('ajax error', this, request));\n\t            };\n\t            xhr.onerror = xhrError_1;\n\t            xhrError_1.request = request;\n\t            xhrError_1.subscriber = this;\n\t            xhrError_1.progressSubscriber = progressSubscriber;\n\t        }\n\t        function xhrReadyStateChange(e) {\n\t            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n\t            if (this.readyState === 4) {\n\t                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n\t                var status_1 = this.status === 1223 ? 204 : this.status;\n\t                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n\t                // fix status code when it is 0 (0 status is undocumented).\n\t                // Occurs when accessing file resources or on Android 4.1 stock browser\n\t                // while retrieving files from application cache.\n\t                if (status_1 === 0) {\n\t                    status_1 = response ? 200 : 0;\n\t                }\n\t                if (200 <= status_1 && status_1 < 300) {\n\t                    if (progressSubscriber) {\n\t                        progressSubscriber.complete();\n\t                    }\n\t                    subscriber.next(e);\n\t                    subscriber.complete();\n\t                }\n\t                else {\n\t                    if (progressSubscriber) {\n\t                        progressSubscriber.error(e);\n\t                    }\n\t                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n\t                }\n\t            }\n\t        }\n\t        ;\n\t        xhr.onreadystatechange = xhrReadyStateChange;\n\t        xhrReadyStateChange.subscriber = this;\n\t        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n\t        xhrReadyStateChange.request = request;\n\t    };\n\t    AjaxSubscriber.prototype.unsubscribe = function () {\n\t        var _a = this, done = _a.done, xhr = _a.xhr;\n\t        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n\t            xhr.abort();\n\t        }\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    return AjaxSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.AjaxSubscriber = AjaxSubscriber;\n\t/**\n\t * A normalized AJAX response.\n\t *\n\t * @see {@link ajax}\n\t *\n\t * @class AjaxResponse\n\t */\n\tvar AjaxResponse = (function () {\n\t    function AjaxResponse(originalEvent, xhr, request) {\n\t        this.originalEvent = originalEvent;\n\t        this.xhr = xhr;\n\t        this.request = request;\n\t        this.status = xhr.status;\n\t        this.responseType = xhr.responseType || request.responseType;\n\t        switch (this.responseType) {\n\t            case 'json':\n\t                if ('response' in xhr) {\n\t                    //IE does not support json as responseType, parse it internally\n\t                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n\t                }\n\t                else {\n\t                    this.response = JSON.parse(xhr.responseText || 'null');\n\t                }\n\t                break;\n\t            case 'xml':\n\t                this.response = xhr.responseXML;\n\t                break;\n\t            case 'text':\n\t            default:\n\t                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n\t                break;\n\t        }\n\t    }\n\t    return AjaxResponse;\n\t}());\n\texports.AjaxResponse = AjaxResponse;\n\t/**\n\t * A normalized AJAX error.\n\t *\n\t * @see {@link ajax}\n\t *\n\t * @class AjaxError\n\t */\n\tvar AjaxError = (function (_super) {\n\t    __extends(AjaxError, _super);\n\t    function AjaxError(message, xhr, request) {\n\t        _super.call(this, message);\n\t        this.message = message;\n\t        this.xhr = xhr;\n\t        this.request = request;\n\t        this.status = xhr.status;\n\t    }\n\t    return AjaxError;\n\t}(Error));\n\texports.AjaxError = AjaxError;\n\t/**\n\t * @see {@link ajax}\n\t *\n\t * @class AjaxTimeoutError\n\t */\n\tvar AjaxTimeoutError = (function (_super) {\n\t    __extends(AjaxTimeoutError, _super);\n\t    function AjaxTimeoutError(xhr, request) {\n\t        _super.call(this, 'ajax timeout', xhr, request);\n\t    }\n\t    return AjaxTimeoutError;\n\t}(AjaxError));\n\texports.AjaxTimeoutError = AjaxTimeoutError;\n\t//# sourceMappingURL=AjaxObservable.js.map\n\n/***/ },\n\n/***/ 271:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar OuterSubscriber_1 = __webpack_require__(115);\n\tvar subscribeToResult_1 = __webpack_require__(121);\n\t/**\n\t * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n\t *\n\t * <img src=\"./img/catch.png\" width=\"100%\">\n\t *\n\t * @example <caption>Continues with a different Observable when there's an error</caption>\n\t *\n\t * Observable.of(1, 2, 3, 4, 5)\n\t *   .map(n => {\n\t * \t   if (n == 4) {\n\t * \t     throw 'four!';\n\t *     }\n\t *\t   return n;\n\t *   })\n\t *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n\t *   .subscribe(x => console.log(x));\n\t *   // 1, 2, 3, I, II, III, IV, V\n\t *\n\t * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n\t *\n\t * Observable.of(1, 2, 3, 4, 5)\n\t *   .map(n => {\n\t * \t   if (n === 4) {\n\t * \t     throw 'four!';\n\t *     }\n\t * \t   return n;\n\t *   })\n\t *   .catch((err, caught) => caught)\n\t *   .take(30)\n\t *   .subscribe(x => console.log(x));\n\t *   // 1, 2, 3, 1, 2, 3, ...\n\t *\n\t * @example <caption>Throws a new error when the source Observable throws an error</caption>\n\t *\n\t * Observable.of(1, 2, 3, 4, 5)\n\t *   .map(n => {\n\t *     if (n == 4) {\n\t *       throw 'four!';\n\t *     }\n\t *     return n;\n\t *   })\n\t *   .catch(err => {\n\t *     throw 'error in source. Details: ' + err;\n\t *   })\n\t *   .subscribe(\n\t *     x => console.log(x),\n\t *     err => console.log(err)\n\t *   );\n\t *   // 1, 2, 3, error in source. Details: four!\n\t *\n\t * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n\t *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n\t *  is returned by the `selector` will be used to continue the observable chain.\n\t * @return {Observable} An observable that originates from either the source or the observable returned by the\n\t *  catch `selector` function.\n\t * @method catch\n\t * @name catch\n\t * @owner Observable\n\t */\n\tfunction _catch(selector) {\n\t    var operator = new CatchOperator(selector);\n\t    var caught = this.lift(operator);\n\t    return (operator.caught = caught);\n\t}\n\texports._catch = _catch;\n\tvar CatchOperator = (function () {\n\t    function CatchOperator(selector) {\n\t        this.selector = selector;\n\t    }\n\t    CatchOperator.prototype.call = function (subscriber, source) {\n\t        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n\t    };\n\t    return CatchOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar CatchSubscriber = (function (_super) {\n\t    __extends(CatchSubscriber, _super);\n\t    function CatchSubscriber(destination, selector, caught) {\n\t        _super.call(this, destination);\n\t        this.selector = selector;\n\t        this.caught = caught;\n\t    }\n\t    // NOTE: overriding `error` instead of `_error` because we don't want\n\t    // to have this flag this subscriber as `isStopped`. We can mimic the\n\t    // behavior of the RetrySubscriber (from the `retry` operator), where\n\t    // we unsubscribe from our source chain, reset our Subscriber flags,\n\t    // then subscribe to the selector result.\n\t    CatchSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var result = void 0;\n\t            try {\n\t                result = this.selector(err, this.caught);\n\t            }\n\t            catch (err2) {\n\t                _super.prototype.error.call(this, err2);\n\t                return;\n\t            }\n\t            this._unsubscribeAndRecycle();\n\t            this.add(subscribeToResult_1.subscribeToResult(this, result));\n\t        }\n\t    };\n\t    return CatchSubscriber;\n\t}(OuterSubscriber_1.OuterSubscriber));\n\t//# sourceMappingURL=catch.js.map\n\n/***/ },\n\n/***/ 272:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(13);\n\tvar isScheduler_1 = __webpack_require__(173);\n\tvar ArrayObservable_1 = __webpack_require__(117);\n\tvar mergeAll_1 = __webpack_require__(273);\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Creates an output Observable which sequentially emits all values from every\n\t * given input Observable after the current Observable.\n\t *\n\t * <span class=\"informal\">Concatenates multiple Observables together by\n\t * sequentially emitting their values, one Observable after the other.</span>\n\t *\n\t * <img src=\"./img/concat.png\" width=\"100%\">\n\t *\n\t * Joins this Observable with multiple other Observables by subscribing to them\n\t * one at a time, starting with the source, and merging their results into the\n\t * output Observable. Will wait for each Observable to complete before moving\n\t * on to the next.\n\t *\n\t * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n\t * var timer = Rx.Observable.interval(1000).take(4);\n\t * var sequence = Rx.Observable.range(1, 10);\n\t * var result = timer.concat(sequence);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in:\n\t * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n\t *\n\t * @example <caption>Concatenate 3 Observables</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var result = timer1.concat(timer2, timer3);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in the following:\n\t * // (Prints to console sequentially)\n\t * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n\t * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n\t * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n\t *\n\t * @see {@link concatAll}\n\t * @see {@link concatMap}\n\t * @see {@link concatMapTo}\n\t *\n\t * @param {ObservableInput} other An input Observable to concatenate after the source\n\t * Observable. More than one input Observables may be given as argument.\n\t * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n\t * Observable subscription on.\n\t * @return {Observable} All values of each passed Observable merged into a\n\t * single Observable, in order, in serial fashion.\n\t * @method concat\n\t * @owner Observable\n\t */\n\tfunction concat() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n\t}\n\texports.concat = concat;\n\t/* tslint:enable:max-line-length */\n\t/**\n\t * Creates an output Observable which sequentially emits all values from given\n\t * Observable and then moves on to the next.\n\t *\n\t * <span class=\"informal\">Concatenates multiple Observables together by\n\t * sequentially emitting their values, one Observable after the other.</span>\n\t *\n\t * <img src=\"./img/concat.png\" width=\"100%\">\n\t *\n\t * `concat` joins multiple Observables together, by subscribing to them one at a time and\n\t * merging their results into the output Observable. You can pass either an array of\n\t * Observables, or put them directly as arguments. Passing an empty array will result\n\t * in Observable that completes immediately.\n\t *\n\t * `concat` will subscribe to first input Observable and emit all its values, without\n\t * changing or affecting them in any way. When that Observable completes, it will\n\t * subscribe to then next Observable passed and, again, emit its values. This will be\n\t * repeated, until the operator runs out of Observables. When last input Observable completes,\n\t * `concat` will complete as well. At any given moment only one Observable passed to operator\n\t * emits values. If you would like to emit values from passed Observables concurrently, check out\n\t * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n\t * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n\t *\n\t * Note that if some input Observable never completes, `concat` will also never complete\n\t * and Observables following the one that did not complete will never be subscribed. On the other\n\t * hand, if some Observable simply completes immediately after it is subscribed, it will be\n\t * invisible for `concat`, which will just move on to the next Observable.\n\t *\n\t * If any Observable in chain errors, instead of passing control to the next Observable,\n\t * `concat` will error immediately as well. Observables that would be subscribed after\n\t * the one that emitted error, never will.\n\t *\n\t * If you pass to `concat` the same Observable many times, its stream of values\n\t * will be \"replayed\" on every subscription, which means you can repeat given Observable\n\t * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n\t * you can always use {@link repeat}.\n\t *\n\t * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n\t * var timer = Rx.Observable.interval(1000).take(4);\n\t * var sequence = Rx.Observable.range(1, 10);\n\t * var result = Rx.Observable.concat(timer, sequence);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in:\n\t * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n\t *\n\t *\n\t * @example <caption>Concatenate an array of 3 Observables</caption>\n\t * var timer1 = Rx.Observable.interval(1000).take(10);\n\t * var timer2 = Rx.Observable.interval(2000).take(6);\n\t * var timer3 = Rx.Observable.interval(500).take(10);\n\t * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * // results in the following:\n\t * // (Prints to console sequentially)\n\t * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n\t * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n\t * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n\t *\n\t *\n\t * @example <caption>Concatenate the same Observable to repeat it</caption>\n\t * const timer = Rx.Observable.interval(1000).take(2);\n\t *\n\t * Rx.Observable.concat(timer, timer) // concating the same Observable!\n\t * .subscribe(\n\t *   value => console.log(value),\n\t *   err => {},\n\t *   () => console.log('...and it is done!')\n\t * );\n\t *\n\t * // Logs:\n\t * // 0 after 1s\n\t * // 1 after 2s\n\t * // 0 after 3s\n\t * // 1 after 4s\n\t * // \"...and it is done!\" also after 4s\n\t *\n\t * @see {@link concatAll}\n\t * @see {@link concatMap}\n\t * @see {@link concatMapTo}\n\t *\n\t * @param {ObservableInput} input1 An input Observable to concatenate with others.\n\t * @param {ObservableInput} input2 An input Observable to concatenate with others.\n\t * More than one input Observables may be given as argument.\n\t * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n\t * Observable subscription on.\n\t * @return {Observable} All values of each passed Observable merged into a\n\t * single Observable, in order, in serial fashion.\n\t * @static true\n\t * @name concat\n\t * @owner Observable\n\t */\n\tfunction concatStatic() {\n\t    var observables = [];\n\t    for (var _i = 0; _i < arguments.length; _i++) {\n\t        observables[_i - 0] = arguments[_i];\n\t    }\n\t    var scheduler = null;\n\t    var args = observables;\n\t    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n\t        scheduler = args.pop();\n\t    }\n\t    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n\t        return observables[0];\n\t    }\n\t    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n\t}\n\texports.concatStatic = concatStatic;\n\t//# sourceMappingURL=concat.js.map\n\n/***/ },\n\n/***/ 275:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(27);\n\t/**\n\t * Emits values emitted by the source Observable so long as each value satisfies\n\t * the given `predicate`, and then completes as soon as this `predicate` is not\n\t * satisfied.\n\t *\n\t * <span class=\"informal\">Takes values from the source only while they pass the\n\t * condition given. When the first value does not satisfy, it completes.</span>\n\t *\n\t * <img src=\"./img/takeWhile.png\" width=\"100%\">\n\t *\n\t * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n\t * emitted on the source is given to the `predicate` function which returns a\n\t * boolean, representing a condition to be satisfied by the source values. The\n\t * output Observable emits the source values until such time as the `predicate`\n\t * returns false, at which point `takeWhile` stops mirroring the source\n\t * Observable and completes the output Observable.\n\t *\n\t * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n\t * var clicks = Rx.Observable.fromEvent(document, 'click');\n\t * var result = clicks.takeWhile(ev => ev.clientX > 200);\n\t * result.subscribe(x => console.log(x));\n\t *\n\t * @see {@link take}\n\t * @see {@link takeLast}\n\t * @see {@link takeUntil}\n\t * @see {@link skip}\n\t *\n\t * @param {function(value: T, index: number): boolean} predicate A function that\n\t * evaluates a value emitted by the source Observable and returns a boolean.\n\t * Also takes the (zero-based) index as the second argument.\n\t * @return {Observable<T>} An Observable that emits the values from the source\n\t * Observable so long as each value satisfies the condition defined by the\n\t * `predicate`, then completes.\n\t * @method takeWhile\n\t * @owner Observable\n\t */\n\tfunction takeWhile(predicate) {\n\t    return this.lift(new TakeWhileOperator(predicate));\n\t}\n\texports.takeWhile = takeWhile;\n\tvar TakeWhileOperator = (function () {\n\t    function TakeWhileOperator(predicate) {\n\t        this.predicate = predicate;\n\t    }\n\t    TakeWhileOperator.prototype.call = function (subscriber, source) {\n\t        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n\t    };\n\t    return TakeWhileOperator;\n\t}());\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar TakeWhileSubscriber = (function (_super) {\n\t    __extends(TakeWhileSubscriber, _super);\n\t    function TakeWhileSubscriber(destination, predicate) {\n\t        _super.call(this, destination);\n\t        this.predicate = predicate;\n\t        this.index = 0;\n\t    }\n\t    TakeWhileSubscriber.prototype._next = function (value) {\n\t        var destination = this.destination;\n\t        var result;\n\t        try {\n\t            result = this.predicate(value, this.index++);\n\t        }\n\t        catch (err) {\n\t            destination.error(err);\n\t            return;\n\t        }\n\t        this.nextOrComplete(value, result);\n\t    };\n\t    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n\t        var destination = this.destination;\n\t        if (Boolean(predicateResult)) {\n\t            destination.next(value);\n\t        }\n\t        else {\n\t            destination.complete();\n\t        }\n\t    };\n\t    return TakeWhileSubscriber;\n\t}(Subscriber_1.Subscriber));\n\t//# sourceMappingURL=takeWhile.js.map\n\n/***/ },\n\n/***/ 307:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _List = __webpack_require__(569);\n\t\n\tvar _List2 = _interopRequireDefault(_List);\n\t\n\tvar _Filter = __webpack_require__(566);\n\t\n\tvar _Filter2 = _interopRequireDefault(_Filter);\n\t\n\tvar _semanticUiReact = __webpack_require__(28);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CitiesComponent = function CitiesComponent() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_Filter2.default, null),\n\t    _react2.default.createElement(_semanticUiReact.Divider, { hidden: true }),\n\t    _react2.default.createElement(_List2.default, null)\n\t  );\n\t};\n\t\n\texports.default = CitiesComponent;\n\n/***/ },\n\n/***/ 566:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FilterComponent = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(32);\n\t\n\tvar _semanticUiReact = __webpack_require__(28);\n\t\n\tvar _actions = __webpack_require__(124);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar FilterComponent = exports.FilterComponent = function FilterComponent(_ref) {\n\t  var handleChange = _ref.handleChange;\n\t  return _react2.default.createElement(_semanticUiReact.Input, {\n\t    fluid: true,\n\t    icon: 'search',\n\t    placeholder: 'Filter cities...',\n\t    onChange: handleChange\n\t  });\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    handleChange: function handleChange(ev) {\n\t      return dispatch((0, _actions.changeFilterTxt)(ev.target.value));\n\t    }\n\t  };\n\t};\n\t\n\texports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(FilterComponent);\n\n/***/ },\n\n/***/ 567:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ItemComponent = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _semanticUiReact = __webpack_require__(28);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CardHeader = _semanticUiReact.Card.Header,\n\t    CardContent = _semanticUiReact.Card.Content;\n\tvar ItemComponent = exports.ItemComponent = function ItemComponent(_ref) {\n\t  var city = _ref.city;\n\t  return _react2.default.createElement(\n\t    _semanticUiReact.Card,\n\t    null,\n\t    _react2.default.createElement(_semanticUiReact.Image, { fluid: true, src: 'https://placehold.it/200/', alt: city.get('title') }),\n\t    _react2.default.createElement(\n\t      CardContent,\n\t      null,\n\t      _react2.default.createElement(\n\t        CardHeader,\n\t        null,\n\t        city.get('title')\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\texports.default = ItemComponent;\n\n/***/ },\n\n/***/ 569:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ListComponent = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(32);\n\t\n\tvar _reselect = __webpack_require__(30);\n\t\n\tvar _semanticUiReact = __webpack_require__(28);\n\t\n\tvar _selectors = __webpack_require__(123);\n\t\n\tvar _Item = __webpack_require__(567);\n\t\n\tvar _Item2 = _interopRequireDefault(_Item);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ListComponent = exports.ListComponent = function ListComponent(_ref) {\n\t  var list = _ref.list,\n\t      loading = _ref.loading;\n\t\n\t  return _react2.default.createElement(\n\t    _semanticUiReact.Card.Group,\n\t    { itemsPerRow: 4, style: { minHeight: '200px' } },\n\t    list.map(function (item) {\n\t      return _react2.default.createElement(_Item2.default, { key: item.get('id'), city: item });\n\t    })\n\t  );\n\t};\n\t\n\tvar mapStateToProps = (0, _reselect.createStructuredSelector)({\n\t  list: (0, _selectors.selectFilteredList)()\n\t});\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps)(ListComponent);\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.7169496d.chunk.js","/**\n * Cities constants\n */\n\n/**\n * When the user updates the search text\n */\nexport const CHANGE_FILTER_TXT = 'skyscrapers/Cities/CHANGE_FILTER_TXT';\n\n/**\n * The AJAX search request for matching skyscrapers starts\n */\nexport const AJAX_FETCH_START = 'skyscrapers/Cities/AJAX_FETCH_START';\n\n/**\n * The AJAX search request successfully ends\n */\nexport const AJAX_FETCH_END = 'skyscrapers/Cities/AJAX_FETCH_END';\n\n/**\n * The AJAX search request fails\n */\nexport const AJAX_FETCH_FAIL = 'skyscrapers/Cities/AJAX_FETCH_FAIL';\n\n/**\n * The user visited the page the first time \n */\nexport const INITIAL_LOAD = 'skyscrapers/Cities/INITIAL_LOAD';\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/constants.js","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMap.js\n// module id = 92\n// module chunks = 1 2","import { combineEpics } from 'redux-observable';\nimport listCities, { listMoreCities } from './List/epic';\n\nconst epic = combineEpics(listCities, listMoreCities);\n\nexport default epic;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/epic.js","import { fromJS } from 'immutable';\nimport listReducer, { initialState as initialListState } from './List/reducer';\nimport {\n  AJAX_FETCH_END,\n  CHANGE_FILTER_TXT,\n} from './constants';\n\nexport const initialState = fromJS({\n  list: initialListState,\n  filterTxt: \"\",\n});\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case AJAX_FETCH_END:\n      return state.set('list', listReducer(state.get('list'), action));\n    case CHANGE_FILTER_TXT:\n      return state.set('filterTxt', payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/reducer.js","\"use strict\";\nvar concat_1 = require('../operator/concat');\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/concat.js\n// module id = 118\n// module chunks = 1 2","import { createSelector } from 'reselect';\nimport { selectCities, selectFilterTxt } from '../selectors';\n\nexport const selectList = () => createSelector(\n  selectCities(),\n  cities => cities.get('list'),\n);\n\nexport const selectFilteredList = () => createSelector(\n  selectList(),\n  selectFilterTxt(),\n  (list, filterTxt) => {\n    if (!filterTxt) return list;\n    const filterRegexp = new RegExp(filterTxt, 'i', 'g');\n    return list.filter(item => filterRegexp.test(item.get('title')));\n  }\n);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/List/selectors.js","import createActionCreator from 'utils/createActionCreator';\nimport {\n  CHANGE_FILTER_TXT,\n  AJAX_FETCH_START,\n  AJAX_FETCH_END,\n  AJAX_FETCH_FAIL,\n  INITIAL_LOAD,\n} from './constants';\n\n/**\n * When the user updates the search text\n */\nexport const changeFilterTxt = createActionCreator(CHANGE_FILTER_TXT);\n\n/**\n * The AJAX search request for matching cities starts\n */\nexport const ajaxFetchStart = createActionCreator(AJAX_FETCH_START);\n\n/**\n * The AJAX search request successfully ends\n */\nexport const ajaxFetchEnd = createActionCreator(AJAX_FETCH_END);\n\n/**\n * The AJAX search request fails\n */\nexport const ajaxFetchFail = createActionCreator(AJAX_FETCH_FAIL);\n\n/**\n * The user visited the page the first time \n */\nexport const initialLoad = createActionCreator(INITIAL_LOAD);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/actions.js","\n/**\n * Method that creates flux action creators\n * Fist call with the type arguments returns the action creator with defined type.\n * Second call accepts payload & meta\n * @argument {string} type       Flux action type constant.\n * @argument {mixed}  payload    The flux action payload.\n * @argument {object} meta       Flux action meta property.\n * @return   {function}          First call returns the actionCreator function\n * @return   {function}          Second call returns Flux action object with payload & meta properties\n */\nconst createActionCreator = (type) => (payload, meta) => ({\n  type,\n  payload,\n  meta,\n});\n\nexport default createActionCreator;\n\n\n// WEBPACK FOOTER //\n// ./src/utils/createActionCreator.js","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/catch.js\n// module id = 169\n// module chunks = 1 2","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 170\n// module chunks = 1 2","\"use strict\";\nvar AjaxObservable_1 = require('./AjaxObservable');\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/ajax.js\n// module id = 171\n// module chunks = 1 2","import 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/takeWhile';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/catch';\nimport { concat as concat$ } from 'rxjs/observable/concat';\nimport { of as of$ } from 'rxjs/observable/of';\nimport { ajax } from 'rxjs/observable/dom/ajax';\nimport {\n  ajaxFetchStart,\n  ajaxFetchEnd,\n  ajaxFetchFail,\n} from '../actions';\nimport { AJAX_FETCH_END } from '../constants';\nimport { getQuery } from '../schema';\n\nconst listCities = ({ limit, start } = {}) => {\n  let selector = \"\";\n  if (start) selector += `, start=${start}`;\n  if (limit) selector += `, limit=${limit}`;\n  selector = selector.substr(2);\n  return concat$(\n\n    // For each ajax request we fire AJAX_FILTER_START action\n    of$(ajaxFetchStart()),\n\n    // make an ajax request\n    ajax({\n      url: process.env.REACT_APP_GRAPHQL_URL,\n      body: {\n        query: getQuery(),\n        variables: JSON.stringify({ selector })\n      },\n      method: 'POST',\n    })\n\n      // fire AJAX_FETCH_END action when successfully requested\n      .map((xhr) => ajaxFetchEnd(xhr.response))\n\n      // fire AJAX_FILTER_FAIL action if request is note successful\n      .catch(e => of$(ajaxFetchFail(e)))\n  );\n}\n\nexport const listMoreCities = action$ => \n  action$\n    .ofType(AJAX_FETCH_END)\n    .takeWhile((action) => {\n      const { getTotal, getLimit, getStart } = action.payload.data.city;\n      return getTotal > getLimit + getStart;\n    })\n    .switchMap((action) => {\n      const { getLimit, getStart } = action.payload.data.city;\n      return listCities({ start: getStart + getLimit });\n    });\n\n  \nexport default listCities;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/List/epic.js","import { List, Map } from 'immutable';\nimport {\n  AJAX_FETCH_END,\n} from '../constants';\n\nexport const initialState = new List();\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case AJAX_FETCH_END:\n      return state.push(...payload.data.city.list.map(item => new Map(item)));\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/List/reducer.js","const query = `query cities($selector: Selector){\n  city(s: $selector){\n    getTotal\n    getLimit\n    getStart\n    list{\n      id\n      title\n      skyscrapersCount: numChildren\n      map{\n        lat\n        lng\n      }\n    }\n  }\n}`;\n\nexport const getQuery = () => query;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/schema.js","import { createSelector } from 'reselect';\n\nexport const selectCities = () => state => state.get('cities');\n\nexport const selectFilterTxt = () => createSelector(\n  selectCities(),\n  cities => cities.get('filterTxt'),\n);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/selectors.js","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeWhile_1 = require('../../operator/takeWhile');\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeWhile.js\n// module id = 269\n// module chunks = 1 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../../util/root');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar Observable_1 = require('../../Observable');\nvar Subscriber_1 = require('../../Subscriber');\nvar map_1 = require('../../operator/map');\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\n;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nexports.ajaxPatch = ajaxPatch;\n;\nfunction ajaxGetJSON(url, headers) {\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable_1.Observable));\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            xhr.timeout = request.timeout;\n            xhr.responseType = request.responseType;\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root_1.root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        switch (this.responseType) {\n            case 'json':\n                if ('response' in xhr) {\n                    //IE does not support json as responseType, parse it internally\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n                }\n                else {\n                    this.response = JSON.parse(xhr.responseText || 'null');\n                }\n                break;\n            case 'xml':\n                this.response = xhr.responseXML;\n                break;\n            case 'text':\n            default:\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\n                break;\n        }\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/AjaxObservable.js\n// module id = 270\n// module chunks = 1 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/catch.js\n// module id = 271\n// module chunks = 1 2","\"use strict\";\nvar Observable_1 = require('../Observable');\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 272\n// module chunks = 1 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return this.lift(new TakeWhileOperator(predicate));\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/takeWhile.js\n// module id = 275\n// module chunks = 1 2","import React from 'react';\nimport List from './List';\nimport Filter from './Filter';\nimport { Divider } from 'semantic-ui-react';\n\nconst CitiesComponent = () => (\n  <div>\n    <Filter />\n    <Divider hidden />\n    <List />\n  </div>\n);\n\nexport default CitiesComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/index.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from 'semantic-ui-react';\nimport {\n  changeFilterTxt,\n} from '../actions';\n\nexport const FilterComponent = ({ handleChange }) => (\n  <Input\n    fluid\n    icon=\"search\"\n    placeholder=\"Filter cities...\"\n    onChange={handleChange}\n  />\n);\n\nconst mapDispatchToProps = dispatch => ({\n  handleChange: (ev) => dispatch(changeFilterTxt(ev.target.value)),\n});\n\nexport default connect(null, mapDispatchToProps)(FilterComponent);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/Filter/index.js","import React from 'react';\nimport {\n  Card,\n  Image,\n} from 'semantic-ui-react';\n\nconst {\n  Header: CardHeader,\n  Content: CardContent,\n} = Card;\n\nexport const ItemComponent = ({ city }) => (\n  <Card>\n    <Image fluid src=\"https://placehold.it/200/\" alt={city.get('title')} />\n    <CardContent>\n      <CardHeader>{city.get('title')}</CardHeader>\n    </CardContent>\n  </Card>\n);\n\nexport default ItemComponent;\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/Item/index.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Card} from 'semantic-ui-react';\nimport { selectFilteredList } from './selectors';\nimport Item from '../Item';\n\nexport const ListComponent = ({ list, loading }) => {\n  return (\n    <Card.Group itemsPerRow={4} style={{ minHeight: '200px' }}>\n      {list.map(item => <Item key={item.get('id')} city={item}/>)}\n    </Card.Group>\n  )\n};\n\nconst mapStateToProps = createStructuredSelector({\n  list: selectFilteredList(),\n});\n\nexport default connect(mapStateToProps)(ListComponent);\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Cities/List/index.js"],"sourceRoot":""}